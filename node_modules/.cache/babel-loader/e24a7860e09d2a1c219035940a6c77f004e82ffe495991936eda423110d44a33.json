{"ast":null,"code":"// import \"./App.css\";\nimport React,{useState,useEffect}from\"react\";import moment from\"moment\";import{SHIFT_TYPES,START_TIMES,CHRONIC_LOAD_RATIO_THRESHOLD,TIME_FORMAT,ROLE_ORDER,SHOW_ROWS_TABLE,SHOW_ROWS_COPY,CHRONIC_LOAD_RATIO_THRESHOLD_S4,NUMBER_OF_ADMISSIONS_CAP,ROLES_WITH_DEFAULT_TIMES,CONSTANT_COMPOSITE_5PM,CONSTANT_COMPOSITE_7PM,CONSTANT_COMPOSITE_5PM_N5,CONSTANT_COMPOSITE_7PM_N1,CONSTANT_COMPOSITE_7PM_N2,CONSTANT_COMPOSITE_7PM_N3,CONSTANT_COMPOSITE_7PM_N4,P95_7PM,P95_5PM,MINIMIZE_TABLE_STATIC_COMPOSITE_WEB,MINIMIZE_TABLE_STATIC_COMPOSITE_MOBILE,ALR_5PM,CLR_5PM,ALR_7PM,CLR_7PM,SHOW_ADMISSIONS_WITH_DETAILS}from\"./constants\";import snapshotImg from\"./images/snapshot.png\";import githublogo from\"./images/github-mark.png\";import emailjs from\"@emailjs/browser\";import CONFIG1 from\"./config\";import CopyMessages from\"./CopyMessages\";import{addTransaction,deleteAllTransactions,getMostRecentTransaction,fetchConfigValues}from\"./transactionsApi\";import html2canvas from\"html2canvas\";import{useNavigate}from\"react-router-dom\";import{getAuth,signOut}from\"firebase/auth\";// ✅ FIX: Make sure this is imported\nimport Logout from'./LogoutButton';// ✅ Correct default import\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CONFIG=CONFIG1;export function App(){// deleteAllTransactions(\"17:00\")\n// deleteAllTransactions(\"16:00\")\n// deleteAllTransactions(\"19:00\")\nconst[allAdmissionsDataShifts,setAllAdmissionsDataShifts]=useState({startTime:\"17:00\",shifts:SHIFT_TYPES});const[seeDetails,setSeeDetails]=useState(false);const[explanation,setExplanation]=useState(\"\");const[openTable,setOpenTable]=useState(false);const[dropdown,setDropdown]=useState(\"17:00\");const[lastSaved,setLastSaved]=useState(\"\");const[loading,setLoading]=useState(true);const[orderOfAdmissions,setOrderOfAdmissions]=useState(\"\");const[array1,setArray1]=useState(\"\");const[array2,setArray2]=useState(\"\");const[clickedGenerateQueue,setClickedGenerateQueue]=useState(false);const[originalAlgorithm,setOriginalAlgorithm]=useState(false);const[show2,setShow2]=useState(false);const[show3,setShow3]=useState(false);const[show4,setShow4]=useState(false);const[config,setConfig]=useState({});const[lastSaved5Pm,setLastSaved5Pm]=useState({});const[doNotStoreInDb,setDoNotStoreInDb]=useState(false);const navigate=useNavigate();// ✅ FIX: Inside the component\nconst auth=getAuth();const handleLogout=async()=>{try{await signOut(auth);navigate(\"/\");// Go back to login\n}catch(error){console.error(\"Logout failed:\",error);}};useEffect(()=>{emailjs.init(CONFIG.REACT_APP_EMAILJS_PUBLIC_KEY);const loadConfig=async()=>{try{const data=await fetchConfigValues();console.log(\"Config values fetched:\",data);// Debugging\nsetConfig(data);}catch(err){console.log(\"Failed to load configuration.\",err);}finally{setLoading(false);}};loadConfig();},[]);useEffect(()=>{let localDateTime=\"\";if(Object.keys(config).length===0){console.log(\"Config not yet loaded, waiting...\");return;}const fetchRecentTransaction=async()=>{function default5PMIfBetween7AMAnd6PM(){const now=new Date();const currentHour=now.getHours();return currentHour>=7&&currentHour<18;}const result=await getMostRecentTransaction(default5PMIfBetween7AMAnd6PM()?\"17:00\":\"19:00\");if(result.success){setLastSaved(result.transaction.localDateTime);if(result.transaction.admissionsObj.allAdmissionsDataShifts&&result.transaction.admissionsObj.allAdmissionsDataShifts.shifts){setDropdown(result.transaction.admissionsObj.startTime);sortMain(result.transaction.admissionsObj.allAdmissionsDataShifts,result.transaction.admissionsObj.startTime?result.transaction.admissionsObj.startTime:\"17:00\",localDateTime);}setOrderOfAdmissions(result.transaction.order);const splitOrderOfAdmissions=orderString=>{const parts=orderString.split(\">\").map(item=>item.split(\"(\")[0]);// Extract only the shift names\nconst firstN1Index=parts.indexOf(\"N1\");const secondN1Index=parts.indexOf(\"N1\",firstN1Index+1);if(secondN1Index!==-1){return[parts.slice(0,secondN1Index),// First array from start to second \"N1\"\nparts.slice(secondN1Index)// Second array from second \"N1\" to end\n];}else{return[parts,[]];// If no second \"N1\", return everything as first array\n}};const orderString=result.transaction.order;const[array1x,array2x]=splitOrderOfAdmissions(orderString);setArray1(array1x);setArray2(array2x);}else{sortMain(allAdmissionsDataShifts,default5PMIfBetween7AMAnd6PM()?\"17:00\":\"19:00\",localDateTime);}};fetchRecentTransaction();const fetchRecent5PMTransaction=async()=>{const result=await getMostRecentTransaction(\"17:00\");if(result.success){setLastSaved5Pm(result.transaction.admissionsObj.allAdmissionsDataShifts);}};fetchRecent5PMTransaction();},[config]);const isXIn2Hours=each=>{let isXIn2Hours=false;if(dropdown==\"19:00\"){lastSaved5Pm&&lastSaved5Pm.shifts&&lastSaved5Pm.shifts.forEach((fivePm,eachIndex)=>{if(each.name==fivePm.name){if(fivePm.numberOfAdmissions!==\"\"&&Number(fivePm.numberOfAdmissions)+2==Number(each.numberOfAdmissions)){isXIn2Hours=true;return true;}}});}return isXIn2Hours;};const is3In2Hours=each=>{let is3In2Hours=false;if(dropdown==\"19:00\"){lastSaved5Pm&&lastSaved5Pm.shifts&&lastSaved5Pm.shifts.forEach((fivePm,eachIndex)=>{if(each.name==fivePm.name){if(fivePm.numberOfAdmissions!==\"\"&&Number(fivePm.numberOfAdmissions)+3<=Number(each.numberOfAdmissions)){is3In2Hours=true;return true;}}});}return is3In2Hours;};const getXIn2Hours=each=>{let isXIn2Hours=\"\";if(dropdown==\"19:00\"){if(each.name==\"N5\"&&each.numberOfAdmissions>=2){return each.numberOfAdmissions;}else{lastSaved5Pm&&lastSaved5Pm.shifts&&lastSaved5Pm.shifts.forEach((fivePm,eachIndex)=>{if(each.name==fivePm.name){if(fivePm.numberOfAdmissions!==\"\"&&Number(fivePm.numberOfAdmissions)+2<=Number(each.numberOfAdmissions)){isXIn2Hours=Number(each.numberOfAdmissions)-Number(fivePm.numberOfAdmissions);return true;}}});}}return isXIn2Hours;};const sortMainOriginal=function(timeObj,dropdownSelected){let lastSavedTime=arguments.length>2&&arguments[2]!==undefined?arguments[2]:\"\";const orderOfAdmissions=[];timeObj&&timeObj.shifts&&timeObj.shifts&&timeObj.shifts.forEach((each,eachIndex)=>{each[\"startTime\"]=timeObj.startTime?timeObj.startTime:\"\";each[\"minutesWorkedFromStartTime\"]=getMinutesWorkedFromStartTime(each);each[\"numberOfHoursWorked\"]=getNumberOfHoursWorked(each);each[\"chronicLoadRatio\"]=getChronicLoadRatio(each);each[\"numberOfAdmissions\"]=each.numberOfAdmissions?each.numberOfAdmissions:\"\";each[\"timestamp\"]=each.timestamp?each.timestamp:\"\";return each;});const explanationArr=[];explanationArr.push(\"Step 1: Rank Order Based on Acute Load (Time Since Last Admission). [ALR = 1 - (Current Time [17:00] - Last Admit Time)/config.P95_7PM]\");/*\n        Step 1: Step 1: Sort based on timestamp. If timestamp is the same, sort by chronic load ratio\n        */const newObject=JSON.parse(JSON.stringify(timeObj));if(newObject.shifts){newObject.shifts.map((each,eachIndex)=>{if(ROLES_WITH_DEFAULT_TIMES[dropdownSelected]&&ROLES_WITH_DEFAULT_TIMES[dropdownSelected].includes(each.name)){each.timestamp=each.timestampDefault;}return each;});/* sort by timestamp. if timestamp is the same, sort by chronic load */newObject&&newObject.shifts&&newObject.shifts.sort((a,b)=>{// Compare timestamps first\nif(a.timestamp<b.timestamp)return-1;if(a.timestamp>b.timestamp)return 1;// If timestamps are equal, compare chronicLoadRatio\nif(a.chronicLoadRatio<b.chronicLoadRatio)return-1;if(a.chronicLoadRatio>b.chronicLoadRatio)return 1;// If timestamps are equal, compare chronicLoadRatio\nif(a.numberOfAdmissions<b.numberOfAdmissions)return-1;if(a.numberOfAdmissions>b.numberOfAdmissions)return 1;return 0;// If both are equal\n});//if same chronic load ratio, then pick the one with lower number of admissions to go first\nnewObject.shifts&&newObject.shifts.forEach((each,eachIndex)=>{if(SHOW_ROWS_COPY[dropdownSelected].includes(each.name)){explanationArr.push(getFormattedOutput(each));}});/*\n            Step 2: For each admitter, if chronic load ratio is >0.67, then deprioritize in the order \n            (either putting in back or pushing back by X spots depending on how great the ratio is)\n            */const shiftsLessThanThreshold=[];const shiftsGreaterThanThreshold=[];explanationArr.push(\"\\n\");explanationArr.push(`Step 2: De-prioritize Admitters with High Chronic Load (Admits/Hours Worked)`);newObject.shifts&&newObject.shifts.forEach((each,eachIndex)=>{if(SHOW_ROWS_COPY[dropdownSelected].includes(each.name)){if(dropdownSelected==\"17:00\"&&each.name===\"S4\"&&dropdown==\"19:00\"&&each.chronicLoadRatio>CHRONIC_LOAD_RATIO_THRESHOLD_S4||!window.Cypress&&isXIn2Hours(each)||dropdown==\"19:00\"&&each.chronicLoadRatio>CHRONIC_LOAD_RATIO_THRESHOLD){// explanationArr.push(getFormattedOutput(each));\nexplanationArr.push(`${each.name}: (${each.numberOfAdmissions?each.numberOfAdmissions:\" \"}/${each.numberOfHoursWorked})=${each.chronicLoadRatio}`);shiftsGreaterThanThreshold.push(each);}else{shiftsLessThanThreshold.push(each);}}});/* Step 3: De-prioritize admitters with high chronic load to the back of the queue */explanationArr.push(\"\\n\");explanationArr.push(`Step 3: De-prioritize admitters with high chronic load to the back of the queue.`);let shiftsCombined=shiftsLessThanThreshold.concat(shiftsGreaterThanThreshold);shiftsCombined.forEach((each,eachIndex)=>{explanationArr.push(getFormattedOutput(each));});/* Step 4: Remove roles with number of admissions greater than 7 */explanationArr.push(\"\\n\");explanationArr.push(`Step 4: Remove high-admission roles.`);shiftsCombined.forEach((each,eachIndex)=>{if(dropdown==\"17:00\"){explanationArr.push(getFormattedOutput(each)+\" (DONE)\");}else if(dropdown==\"19:00\"){if(each.numberOfAdmissions>NUMBER_OF_ADMISSIONS_CAP){explanationArr.push(getFormattedOutput(each)+\" (DONE)\");}}});/* Step 5: High chronic load scenarios */// explanationArr.push(\"\\n\");\nlet scenario1=false;let scenario2=false;let scenario3=false;if(timeObj.startTime==\"19:00\"){shiftsCombined.forEach((each,eachIndex)=>{/* Scenario 1: \n                    // If S3 has 6 admissions,\n                    // S4 has 6 admissions or\n                    // N5 has 3+ admissions */if(each.name==\"S3\"&&Number(each.numberOfAdmissions)==6||each.name==\"S4\"&&Number(each.numberOfAdmissions)==6||each.name==\"N5\"&&Number(each.numberOfAdmissions)>=3&&each.name==\"N5\"&&Number(each.numberOfAdmissions)<=6){scenario1=true;return;/* Scenario 2: If S4 has 5 admissions */}else if(each.name==\"S4\"&&Number(each.numberOfAdmissions)==5){scenario1=false;scenario2=true;return;//If S3 has number of admissions of 5, then (N1-N4), N1>S3>N2>N3>N4 “Insert after N1 in Array2”\n}/*else if (each.name == \"S3\" && Number(each.numberOfAdmissions) == 5){\n                        explanationArr.push(`Step 5: If S3 has number of admissions of 5, then (N1-N4), N1>S3>N2>N3>N4`);\n                        scenario3 = true;\n                        return;\n                    }*/});}if(scenario1){explanationArr.push(\"Step 5 (Scenario 1): 7PM High Chronic Load Scenario. If S3 or S4 has number of admission of 6 or N5 has number of admissions of 3+, then repeat (N1-N4)x2 and then insert at the end.\");/* Step 1: Remove from Array 1. This means that we have to copy Array 1 to Array 2.*/const array1=[];const array2=[];let s4HasFiveAdmissions=false;let s4HasFiveAdmissions_obj={};shiftsCombined.forEach((innerEach,innerEachIndex)=>{if(innerEach.name==\"S4\"&&Number(innerEach.numberOfAdmissions)==5){s4HasFiveAdmissions=true;s4HasFiveAdmissions_obj=innerEach;}});shiftsCombined.forEach((innerEach,innerEachIndex)=>{if(dropdown==\"17:00\"){if(innerEach.name==\"S2\"&&Number(innerEach.numberOfAdmissions)==6){}else{array2.push(innerEach);}}else if(dropdown==\"19:00\"){if(innerEach.name==\"S2\"&&Number(innerEach.numberOfAdmissions)==6||Number(innerEach.numberOfAdmissions)>NUMBER_OF_ADMISSIONS_CAP){}else{array2.push(innerEach);}}});if(s4HasFiveAdmissions){let index=array2.findIndex(obj=>obj.name===\"S4\");if(index!==-1){let[removed]=array2.splice(index,1);array2.splice(2,0,removed);}}shiftsCombined.forEach((innerEach,innerEachIndex)=>{if(dropdown==\"17:00\"){if(innerEach.name==\"S3\"&&Number(innerEach.numberOfAdmissions)==6||innerEach.name==\"S4\"&&Number(innerEach.numberOfAdmissions)==6||innerEach.name==\"S4\"&&Number(innerEach.numberOfAdmissions)==5||innerEach.name==\"N5\"&&Number(innerEach.numberOfAdmissions)>=3){explanationArr.push(getFormattedOutput(innerEach));}else{array1.push(innerEach);}}else if(dropdown==\"19:00\"){if(innerEach.name==\"S3\"&&Number(innerEach.numberOfAdmissions)==6||innerEach.name==\"S4\"&&Number(innerEach.numberOfAdmissions)==6||innerEach.name==\"S4\"&&Number(innerEach.numberOfAdmissions)==5||innerEach.name==\"N5\"&&Number(innerEach.numberOfAdmissions)>=3||Number(innerEach.numberOfAdmissions)>NUMBER_OF_ADMISSIONS_CAP){explanationArr.push(getFormattedOutput(innerEach));}else{array1.push(innerEach);}}});/* Step 2: Create Array 2 but copying over from Array 1*/shiftsCombined=array1.concat(array2);setArray1(array1&&array1.map(each=>{if(window.location.hostname==='localhost'&&SHOW_ADMISSIONS_WITH_DETAILS){return`${each.name}(${each.normalizedAlr},${each.normalizedClr},${each.composite})`;}else{return each.name;}}));setArray2(array2&&array2.map(each=>{if(window.location.hostname==='localhost'&&SHOW_ADMISSIONS_WITH_DETAILS){return`${each.name}(${each.normalizedAlr},${each.normalizedClr},${each.composite})`;}else{return each.name;}}));const combinedArr=array1.concat(array2);shiftsCombined=combinedArr;}else if(scenario2){explanationArr.push(\"Step 5 (Scenario 2): 7PM High Chronic Load Scenario. If S4 has number of admissions of 5, then N1-N4, N1>N2>S4>N3>N4\");/* If S4 has number of admissions of 5, then remove S4 from Array 1. This means that we have to copy Array 1 to Array 2. */const array1=[];const array2=[];let getS4={};shiftsCombined.forEach((innerEach,innerEachIndex)=>{if(dropdown==\"17:00\"){if(innerEach.name==\"S4\"){explanationArr.push(getFormattedOutput(innerEach));getS4=innerEach;}else if(innerEach.name==\"S2\"&&Number(innerEach.numberOfAdmissions)==6){array1.push(innerEach);}else if(innerEach.name==\"S3\"&&Number(innerEach.numberOfAdmissions)==6){array2.push(innerEach);}else{array1.push(innerEach);array2.push(innerEach);}}else if(dropdown==\"19:00\"){if(Number(innerEach.numberOfAdmissions)>NUMBER_OF_ADMISSIONS_CAP){}else if(innerEach.name==\"S4\"){explanationArr.push(getFormattedOutput(innerEach));getS4=innerEach;}else if(innerEach.name==\"S2\"&&Number(innerEach.numberOfAdmissions)==6){array1.push(innerEach);}else if(innerEach.name==\"S3\"&&Number(innerEach.numberOfAdmissions)==6){array2.push(innerEach);}else{array1.push(innerEach);array2.push(innerEach);}}});const newElement=getS4;let index=0;for(let i=0;i<array2.length;i++){if(array2[i].name==\"N2\"){index=i;}}if(index!==-1){// Insert the new element after the found element\narray2.splice(index+1,0,newElement);}// N5 is inserted after N4, if S4 qualifies then S4 inserted After N4, if S3 qualifies then S3 inserted after N4 \nconst combinedArr=array1.concat(array2);shiftsCombined=combinedArr;setArray1(array1&&array1.map(each=>{if(window.location.hostname==='localhost'&&SHOW_ADMISSIONS_WITH_DETAILS){return`${each.name}(${each.normalizedAlr},${each.normalizedClr},${each.composite})`;}else{return each.name;}}));setArray2(array2&&array2.map(each=>{if(window.location.hostname==='localhost'&&SHOW_ADMISSIONS_WITH_DETAILS){return`${each.name}(${each.normalizedAlr},${each.normalizedClr},${each.composite})`;}else{return each.name;}}));}else if(scenario3){const array1=[];let getS3={};shiftsCombined.forEach((innerEach,innerEachIndex)=>{if(dropdown==\"17:00\"){if(innerEach.name==\"S3\"){getS3=innerEach;}else{array1.push(innerEach);}}else if(dropdown==\"19:00\"){if(Number(innerEach.numberOfAdmissions)>NUMBER_OF_ADMISSIONS_CAP){}else if(innerEach.name==\"S3\"){getS3=innerEach;}else{array1.push(innerEach);}}});const array2=[];const copyArray2=[...array1];copyArray2.forEach((innerEach,innerEachIndex)=>{if(dropdown==\"17:00\"){if(innerEach.name==\"S2\"&&Number(innerEach.numberOfAdmissions)==6){}else{array2.push(innerEach);}}else if(dropdown==\"19:00\"){if(innerEach.name==\"S2\"&&Number(innerEach.numberOfAdmissions)==6||Number(innerEach.numberOfAdmissions)>NUMBER_OF_ADMISSIONS_CAP){}else{array2.push(innerEach);}}});const newElement=getS3;let index=0;for(let i=0;i<array2.length;i++){if(array2[i].name==\"N1\"){index=i;}}if(index!==-1){// Insert the new element after the found element\narray2.splice(index+1,0,newElement);}setArray1(array1&&array1.map(each=>{if(window.location.hostname==='localhost'&&SHOW_ADMISSIONS_WITH_DETAILS){return`${each.name}(${each.normalizedAlr},${each.normalizedClr},${each.composite})`;}else{return each.name;}}));setArray2(array2&&array2.map(each=>{if(window.location.hostname==='localhost'&&SHOW_ADMISSIONS_WITH_DETAILS){return`${each.name}(${each.normalizedAlr},${each.normalizedClr},${each.composite})`;}else{return each.name;}}));const combinedArr=array1.concat(array2);shiftsCombined=combinedArr;}shiftsCombined.map((each,eachIndex)=>{if(SHOW_ROWS_COPY[dropdownSelected].includes(each.name)){if(dropdown==\"17:00\"){if(window.location.hostname==='localhost'&&SHOW_ADMISSIONS_WITH_DETAILS){orderOfAdmissions.push(`${each.name}(${each.chronicLoadRatio})`);}else{orderOfAdmissions.push(each.name);}}else if(dropdown==\"19:00\"){if(Number(each.numberOfAdmissions)<=NUMBER_OF_ADMISSIONS_CAP){if(window.location.hostname==='localhost'&&SHOW_ADMISSIONS_WITH_DETAILS){orderOfAdmissions.push(`${each.name}(${each.chronicLoadRatio})`);}else{orderOfAdmissions.push(each.name);}}}}});setOrderOfAdmissions(orderOfAdmissions.join(\">\"));setExplanation(explanationArr);setSortRoles(timeObj,dropdownSelected,lastSavedTime);setAllAdmissionsDataShifts(timeObj);sortByAscendingName(timeObj);}return orderOfAdmissions.join(\">\");};const sortMain=function(timeObj,dropdownSelected){let lastSavedTime=arguments.length>2&&arguments[2]!==undefined?arguments[2]:\"\";if(originalAlgorithm){return sortMainOriginal(timeObj,dropdownSelected,lastSavedTime);}return sortMainByCompositeScoreStatic(timeObj,dropdownSelected,lastSavedTime);};const sortMainByCompositeScoreStatic=function(timeObj,dropdownSelected){let lastSavedTime=arguments.length>2&&arguments[2]!==undefined?arguments[2]:\"\";const orderOfAdmissions=[];timeObj&&timeObj.shifts&&timeObj.shifts&&timeObj.shifts.map((each,eachIndex)=>{if(SHOW_ROWS_COPY[dropdownSelected].includes(each.name)){return each;}else{each[\"timestamp\"]=\"\";each[\"numberOfAdmissions\"]=\"\";}return each;});timeObj&&timeObj.shifts&&timeObj.shifts&&timeObj.shifts.forEach((each,eachIndex)=>{each[\"startTime\"]=timeObj.startTime?timeObj.startTime:\"\";each[\"minutesWorkedFromStartTime\"]=getMinutesWorkedFromStartTime(each);each[\"numberOfHoursWorked\"]=getNumberOfHoursWorked(each);each[\"chronicLoadRatio\"]=getChronicLoadRatio(each);each[\"numberOfAdmissions\"]=each.numberOfAdmissions?each.numberOfAdmissions:\"\";each[\"timestamp\"]=each.timestamp?each.timestamp:\"\";return each;});const explanationArr=[];const differenceArr=[];const alrArr=[];const clrArr=[];const compositeArr=[];const normalizedAlrExplanation=[];const normalizedClrExplanation=[];const compositeArrExplanation=[];const getAlrExplanation=(each,alrx)=>{if(SHOW_ROWS_TABLE[dropdownSelected].includes(each.name)){let p95=\"\";if(dropdownSelected==\"19:00\"){p95=config.P95_7PM;}else if(dropdownSelected==\"17:00\"){p95=config.P95_5PM;}let fixedDiff=each.difference;if(each.difference>p95){fixedDiff=p95;}return`${each.name}: ${alrx}`;}};const getClrExplanation=(each,clrx)=>{if(SHOW_ROWS_TABLE[dropdownSelected].includes(each.name)){const admissions=Number(each.numberOfAdmissions);let clr=Number(clrx);let str=\"\";if(dropdownSelected==\"19:00\"){if(each.name==\"S2\"){str=`${each.name}: ${admissions} / 8 = ${clr.toFixed(3)}`;}else if(each.name==\"S3\"){str=`${each.name}: ${admissions} / 6 = ${clr.toFixed(3)}`;}else if(each.name==\"S4\"){str=`${each.name}: ${admissions} / 5 = ${clr.toFixed(3)}`;}else if(each.name==\"N5\"){str=`${each.name}: ${admissions} / 2 = ${clr.toFixed(3)}`;}return str;}else if(dropdownSelected==\"17:00\"){if(each.name==\"S1\"){str=`${each.name}: ${admissions} / 7 = ${clr.toFixed(3)}`;}else if(each.name==\"S2\"){str=`${each.name}: ${admissions} / 6 = ${clr.toFixed(3)}`;}else if(each.name==\"S3\"){str=`${each.name}: ${admissions} / 4 = ${clr.toFixed(3)}`;}else if(each.name==\"S4\"){str=`${each.name}: ${admissions} / 3 = ${clr.toFixed(3)}`;}return str;}}};const getCompositeExplanation=(each,normalizedAlr,normalizedClr,isFinalExplanation)=>{const alr_f=dropdownSelected==\"17:00\"?config.ALR_5PM:config.ALR_7PM;const clr_f=dropdownSelected==\"17:00\"?config.CLR_5PM:config.CLR_7PM;let res=(alr_f*Number(normalizedAlr)+clr_f*Number(normalizedClr)).toFixed(3);if(dropdownSelected==\"17:00\"){if(each.name==\"N5\"){res=config.CONSTANT_COMPOSITE_5PM_N5;return`${each.name}: ${config.CONSTANT_COMPOSITE_5PM_N5}`;}}else if(dropdownSelected==\"19:00\"){if(each.name==\"N1\"){res=config.CONSTANT_COMPOSITE_7PM_N1;return`${each.name}: ${config.CONSTANT_COMPOSITE_7PM_N1}`;}else if(each.name==\"N2\"){res=config.CONSTANT_COMPOSITE_7PM_N2;return`${each.name}: ${config.CONSTANT_COMPOSITE_7PM_N2}`;}else if(each.name==\"N3\"){res=config.CONSTANT_COMPOSITE_7PM_N3;return`${each.name}: ${config.CONSTANT_COMPOSITE_7PM_N3}`;}else if(each.name==\"N4\"){res=config.CONSTANT_COMPOSITE_7PM_N4;return`${each.name}: ${config.CONSTANT_COMPOSITE_7PM_N4}`;}}if(isFinalExplanation){return`${each.name}: ${res}`;}else{if(SHOW_ROWS_TABLE[dropdownSelected].includes(each.name)){return`${each.name}: (${alr_f} * ${normalizedAlr}) + (${clr_f} * ${normalizedClr}) = ${res}`;}}};const getNormalizedAlrExplanation=each=>{if(SHOW_ROWS_TABLE[dropdownSelected].includes(each.name)){let p95_alr=\"\";if(dropdownSelected==\"17:00\"){p95_alr=1.00;}else if(dropdownSelected==\"19:00\"){p95_alr=1.00;}return`${each.name}: ${each.alr} / ${p95_alr} = ${each.normalizedAlr}`;}};const getNormalizedClrExplanation=each=>{if(SHOW_ROWS_TABLE[dropdownSelected].includes(each.name)){let p95_clr=\"\";if(dropdownSelected==\"17:00\"){p95_clr=1.00;}else if(dropdownSelected==\"19:00\"){p95_clr=1.00;}return`${each.name}: ${each.clr} / ${p95_clr} = ${each.normalizedClr}`;}};explanationArr.push(\"Step 1: Calculate Acute Load for each Role.\");const getAlrx=(each,difference)=>{if(dropdownSelected==\"19:00\"&&each.name==\"N5\"&&Number(each.numberOfAdmissions)==0){return 0;}let p95=\"\";if(dropdownSelected==\"19:00\"){p95=config.P95_7PM;}else if(dropdownSelected==\"17:00\"){p95=config.P95_5PM;}let fixedDiff=difference;if(difference>p95){fixedDiff=p95;}let increaseAlr=0;if(!window.Cypress&&dropdownSelected==\"19:00\"){if(each.name==\"N5\"&&each.numberOfAdmissions>1){increaseAlr=Number(each.numberOfAdmissions)-1;}else{lastSaved5Pm&&lastSaved5Pm.shifts&&lastSaved5Pm.shifts.forEach((fivePm,eachIndex)=>{if(each.name==fivePm.name){if(fivePm.numberOfAdmissions!==\"\"&&Number(fivePm.numberOfAdmissions)+2<=Number(each.numberOfAdmissions)){increaseAlr=Number(each.numberOfAdmissions)-Number(fivePm.numberOfAdmissions)-1;}}});}}const originalAlr=Number(1-fixedDiff/p95);const updatedAlr=originalAlr+increaseAlr;return updatedAlr.toFixed(3);};const getClrx=each=>{if(dropdownSelected==\"19:00\"&&each.name==\"N5\"&&Number(each.numberOfAdmissions)==0){return 0;}const admissions=Number(each.numberOfAdmissions);let clr=0;if(dropdownSelected==\"19:00\"){if(each.name==\"S2\"){clr=Number(admissions)/8;}else if(each.name==\"S3\"){clr=Number(admissions)/6;}else if(each.name==\"S4\"){clr=Number(admissions)/5;}else if(each.name==\"N5\"){clr=Number(admissions)/2;}return clr.toFixed(3);}else if(dropdownSelected==\"17:00\"){if(each.name==\"S1\"){clr=Number(admissions)/7;}else if(each.name==\"S2\"){clr=Number(admissions)/6;}else if(each.name==\"S3\"){clr=Number(admissions)/4;}else if(each.name==\"S4\"){clr=Number(admissions)/3;}return clr.toFixed(3);}};const getCompositex=(each,normalizedAlr,normalizedClr)=>{const alr_f=dropdownSelected==\"17:00\"?config.ALR_5PM:config.ALR_7PM;const clr_f=dropdownSelected==\"17:00\"?config.CLR_5PM:config.CLR_7PM;let res=(alr_f*Number(normalizedAlr)+clr_f*Number(normalizedClr)).toFixed(3);if(dropdownSelected==\"17:00\"){if(each.name==\"N5\"){res=config.CONSTANT_COMPOSITE_5PM_N5;return config.CONSTANT_COMPOSITE_5PM_N5;}}else if(dropdownSelected==\"19:00\"){if(each.name==\"N1\"){res=config.CONSTANT_COMPOSITE_7PM_N1;return config.CONSTANT_COMPOSITE_7PM_N1;}else if(each.name==\"N2\"){res=config.CONSTANT_COMPOSITE_7PM_N2;return config.CONSTANT_COMPOSITE_7PM_N2;}else if(each.name==\"N3\"){res=config.CONSTANT_COMPOSITE_7PM_N3;return config.CONSTANT_COMPOSITE_7PM_N3;}else if(each.name==\"N4\"){res=config.CONSTANT_COMPOSITE_7PM_N4;return config.CONSTANT_COMPOSITE_7PM_N4;}}return Number(res).toFixed(3);};const getNormalizedAlrx=(each,alrx)=>{let p95_alr=\"\";if(dropdownSelected==\"17:00\"){p95_alr=1.00;}else if(dropdownSelected==\"19:00\"){p95_alr=1.00;}const normalizedAlr=Number(alrx)/p95_alr;return Number(normalizedAlr).toFixed(3);};const getNormalizedClrx=(each,clrx)=>{let p95_clr=\"\";if(dropdownSelected==\"17:00\"){p95_clr=1.00;}else if(dropdownSelected==\"19:00\"){p95_clr=1.00;}const normalizedAlr=clrx/p95_clr;return Number(normalizedAlr).toFixed(3);};const getTimeDifferencex=time1=>{if(time1){const time2=dropdownSelected;// Convert times to minutes\nconst[hours1,minutes1]=time1.split(':').map(Number);const[hours2,minutes2]=time2.split(':').map(Number);const totalMinutes1=hours1*60+minutes1;const totalMinutes2=hours2*60+minutes2;// Calculate difference in minutes\nlet diffMinutes=totalMinutes2-totalMinutes1;return diffMinutes;}else{return 0;}};timeObj.shifts.forEach((each,eachIndex)=>{if(SHOW_ROWS_COPY[dropdownSelected].includes(each.name)){const difference=getTimeDifferencex(each.timestamp);const alrx=getAlrx(each,difference);const clrx=getClrx(each);const normalizedAlr=getNormalizedAlrx(each,alrx);const normalizedClr=getNormalizedClrx(each,clrx);const composite=getCompositex(each,normalizedAlr,normalizedClr);each[\"difference\"]=difference;each[\"alr\"]=alrx;each[\"clr\"]=clrx;each[\"composite\"]=composite;each[\"normalizedAlr\"]=normalizedAlr;each[\"normalizedClr\"]=normalizedClr;compositeArrExplanation.push(getCompositeExplanation(each,normalizedAlr,normalizedClr));alrArr.push(getAlrExplanation(each,alrx));clrArr.push(getClrExplanation(each,clrx));normalizedAlrExplanation.push(getNormalizedAlrExplanation(each));normalizedClrExplanation.push(getNormalizedClrExplanation(each));}});/*\n        Step 1: Time Difference\n        */timeObj.shifts.sort((a,b)=>{if(a.difference>b.difference){return 1;}if(a.difference<b.difference){return-1;}return 0;});timeObj.shifts.sort((a,b)=>{if(a.composite<b.composite){return-1;}if(b.composite>b.composite){return 1;}return 0;});// explanationArr.push(`ALR = 1 - (Minutes Before The Hour/ P95)`);\nalrArr.map((each,eachIndex)=>{explanationArr.push(each);});explanationArr.push(\"\\n\");explanationArr.push(`Step 2: Calculate Chronic Load for each Role.`);explanationArr.push(\"CLR = Number of Admits / Hours Worked So Far\");clrArr.map((each,eachIndex)=>{explanationArr.push(each);});// explanationArr.push(\"\\n\")\n// explanationArr.push(`Step 3: Calculate Normalized ALR.`);\n// normalizedAlrExplanation.map((each, eachIndex) => {\n//     explanationArr.push(each);\n// });\n// explanationArr.push(\"\\n\")\n// explanationArr.push(`Step 4: Calculate Normalized CLR.`);\n// normalizedClrExplanation.map((each, eachIndex) => {\n//     explanationArr.push(each);\n// });\nexplanationArr.push(\"\\n\");explanationArr.push(`Step 3: Calculate Composite Score.`);compositeArrExplanation.forEach((each,eachIndex)=>{// explanationArr.push(each);\n});timeObj.shifts.sort((a,b)=>{if(Number(a.composite)>Number(b.composite)){return 1;}if(Number(a.composite)<Number(b.composite)){return-1;}return 0;});explanationArr.push(\"\\n\");explanationArr.push(\"Step 4: Generate the Order, with Roles having the Lowest Composite Score Prioritized First.\");timeObj.shifts.forEach((each,eachIndex)=>{if(SHOW_ROWS_TABLE[dropdownSelected].includes(each.name)){explanationArr.push(`${each.name}: ${each.composite}`);}});const lessThan2Hours=[];const greaterThan2Hours=[];let hasAnyGreaterThan2Hours=false;timeObj.shifts.forEach((each,eachIndex)=>{if(SHOW_ROWS_COPY[dropdownSelected].includes(each.name)){if(dropdownSelected==\"19:00\"&&!window.Cypress&&isXIn2Hours(each)||dropdownSelected==\"19:00\"&&each.chronicLoadRatio>CHRONIC_LOAD_RATIO_THRESHOLD_S4){greaterThan2Hours.push(each);hasAnyGreaterThan2Hours=true;}else{lessThan2Hours.push(each);}}});greaterThan2Hours.sort((a,b)=>{if(a.composite>b.composite){return 1;}else if(a.composite<b.composite){return-1;}return 0;});// if (hasAnyGreaterThan2Hours) {\n//     explanationArr.push(\"\\n\")\n//     explanationArr.push(\"Step 7: Check if any roles have had 2 or more admissions in the last 2 hours. Then sort by composite score.\");\n//     greaterThan2Hours && greaterThan2Hours.forEach((each) => {\n//         explanationArr.push(`${each.name}: had ${getXIn2Hours(each)} admissions in the last 2 hours /  Composite Score: ${each.composite}`);\n//     })\n// }\nlet shiftsCombined=lessThan2Hours.concat(greaterThan2Hours);let scenario1=false;let scenario2=false;let scenario3=false;if(timeObj.startTime==\"19:00\"){shiftsCombined.forEach((each,eachIndex)=>{/* Scenario 1: \n                // If S3 has 6 admissions,\n                // S4 has 6 admissions or\n                // N5 has 3+ admissions */if(each.name==\"S3\"&&Number(each.numberOfAdmissions)==6||each.name==\"S4\"&&Number(each.numberOfAdmissions)==6||each.name==\"N5\"&&Number(each.numberOfAdmissions)>=3&&each.name==\"N5\"&&Number(each.numberOfAdmissions)<=6){scenario1=true;return;/* Scenario 2: If S4 has 5 admissions */}else if(each.name==\"S4\"&&Number(each.numberOfAdmissions)==5){scenario1=false;scenario2=true;return;//If S3 has number of admissions of 5, then (N1-N4), N1>S3>N2>N3>N4 “Insert after N1 in Array2”\n}/*else if (each.name == \"S3\" && Number(each.numberOfAdmissions) == 5){\n                    explanationArr.push(`Step 5: If S3 has number of admissions of 5, then (N1-N4), N1>S3>N2>N3>N4`);\n                    scenario3 = true;\n                    return;\n                }*/});}if(scenario1){// explanationArr.push(\"\\n\");\n// explanationArr.push(\"7PM High Chronic Load Scenario. If S3 or S4 has number of admission of 6 or N5 has number of admissions of 3+, then repeat (N1-N4)x2 and then insert at the end.\");\n/* Step 1: Remove from Array 1. This means that we have to copy Array 1 to Array 2.*/const array1=[];const array2=[];let s4HasFiveAdmissions=false;let s4HasFiveAdmissions_obj={};shiftsCombined.forEach((innerEach,innerEachIndex)=>{if(innerEach.name==\"S4\"&&Number(innerEach.numberOfAdmissions)==5){s4HasFiveAdmissions=true;s4HasFiveAdmissions_obj=innerEach;}});shiftsCombined.forEach((innerEach,innerEachIndex)=>{if(dropdownSelected==\"17:00\"){if(innerEach.name==\"S2\"&&Number(innerEach.numberOfAdmissions)==6){}else{array2.push(innerEach);}}else if(dropdownSelected==\"19:00\"){if(innerEach.name==\"S2\"&&Number(innerEach.numberOfAdmissions)==6||Number(innerEach.numberOfAdmissions)>NUMBER_OF_ADMISSIONS_CAP){}else{array2.push(innerEach);}}});if(s4HasFiveAdmissions){let index=array2.findIndex(obj=>obj.name===\"S4\");if(index!==-1){let[removed]=array2.splice(index,1);array2.splice(2,0,removed);}}shiftsCombined.forEach((innerEach,innerEachIndex)=>{if(dropdownSelected==\"17:00\"){if(innerEach.name==\"S3\"&&Number(innerEach.numberOfAdmissions)==6||innerEach.name==\"S4\"&&Number(innerEach.numberOfAdmissions)==6||innerEach.name==\"S4\"&&Number(innerEach.numberOfAdmissions)==5||innerEach.name==\"N5\"&&Number(innerEach.numberOfAdmissions)>=3){// explanationArr.push(getFormattedOutputCompositeScore2(innerEach));\n}else{array1.push(innerEach);}}else if(dropdownSelected==\"19:00\"){if(innerEach.name==\"S3\"&&Number(innerEach.numberOfAdmissions)==6||innerEach.name==\"S4\"&&Number(innerEach.numberOfAdmissions)==6||innerEach.name==\"S4\"&&Number(innerEach.numberOfAdmissions)==5||innerEach.name==\"N5\"&&Number(innerEach.numberOfAdmissions)>=3||is3In2Hours(innerEach)||Number(innerEach.numberOfAdmissions)>NUMBER_OF_ADMISSIONS_CAP){// explanationArr.push(getFormattedOutputCompositeScore2(innerEach));\n}else{array1.push(innerEach);}}});/* Step 2: Create Array 2 but copying over from Array 1*/// shiftsCombined = array1.concat(array2);\nsetArray1(array1&&array1.map(each=>{if(window.location.hostname==='localhost'&&SHOW_ADMISSIONS_WITH_DETAILS){return each.name;// return `${each.name}(${each.normalizedAlr},${each.normalizedClr},${each.composite})`;\n}else{return each.name;}}));setArray2(array2&&array2.map(each=>{if(window.location.hostname==='localhost'&&SHOW_ADMISSIONS_WITH_DETAILS){// return `${each.name}(${each.normalizedAlr},${each.normalizedClr},${each.composite})`;\nreturn each.name;}else{return each.name;}}));const combinedArr=array1.concat(array2);shiftsCombined=combinedArr;}else if(scenario2){// explanationArr.push(\"\\n\");\n// explanationArr.push(\"7PM High Chronic Load Scenario. If S4 has number of admissions of 5, then N1-N4, N1>N2>S4>N3>N4\");\n/* If S4 has number of admissions of 5, then remove S4 from Array 1. This means that we have to copy Array 1 to Array 2. */const array1=[];const array2=[];let getS4={};shiftsCombined.forEach((innerEach,innerEachIndex)=>{if(dropdownSelected==\"17:00\"){if(innerEach.name==\"S4\"){// explanationArr.push(getFormattedOutputCompositeScore2(innerEach))\ngetS4=innerEach;}else if(innerEach.name==\"S2\"&&Number(innerEach.numberOfAdmissions)==6){array1.push(innerEach);}else if(innerEach.name==\"S3\"&&Number(innerEach.numberOfAdmissions)==6){array2.push(innerEach);}else{array1.push(innerEach);array2.push(innerEach);}}else if(dropdownSelected==\"19:00\"){if(Number(innerEach.numberOfAdmissions)>NUMBER_OF_ADMISSIONS_CAP){}else if(innerEach.name==\"S4\"){// explanationArr.push(getFormattedOutputCompositeScore2(innerEach))\ngetS4=innerEach;}else if(innerEach.name==\"S2\"&&Number(innerEach.numberOfAdmissions)==6){array1.push(innerEach);}else if(innerEach.name==\"S3\"&&Number(innerEach.numberOfAdmissions)==6){array2.push(innerEach);}else{array1.push(innerEach);array2.push(innerEach);}}});const newElement=getS4;let index=0;for(let i=0;i<array2.length;i++){if(array2[i].name==\"N2\"){index=i;}}if(index!==-1){// Insert the new element after the found element\narray2.splice(index+1,0,newElement);}// N5 is inserted after N4, if S4 qualifies then S4 inserted After N4, if S3 qualifies then S3 inserted after N4 \nconst combinedArr=array1.concat(array2);shiftsCombined=combinedArr;setArray1(array1&&array1.map(each=>{if(window.location.hostname==='localhost'&&SHOW_ADMISSIONS_WITH_DETAILS){return each.name;// return `${each.name}(${each.normalizedAlr},${each.normalizedClr},${each.composite})`;\n}else{return each.name;}}));setArray2(array2&&array2.map(each=>{if(window.location.hostname==='localhost'&&SHOW_ADMISSIONS_WITH_DETAILS){return each.name;// return `${each.name}(${each.normalizedAlr},${each.normalizedClr},${each.composite})`;\n}else{return each.name;}}));}else if(scenario3){// explanationArr.push(\"\\n\");\nconst array1=[];let getS3={};shiftsCombined.forEach((innerEach,innerEachIndex)=>{if(dropdownSelected==\"17:00\"){if(innerEach.name==\"S3\"){getS3=innerEach;}else{array1.push(innerEach);}}else if(dropdownSelected==\"19:00\"){if(Number(innerEach.numberOfAdmissions)>NUMBER_OF_ADMISSIONS_CAP){}else if(innerEach.name==\"S3\"){getS3=innerEach;}else{array1.push(innerEach);}}});const array2=[];const copyArray2=[...array1];copyArray2.forEach((innerEach,innerEachIndex)=>{if(dropdownSelected==\"17:00\"){if(innerEach.name==\"S2\"&&Number(innerEach.numberOfAdmissions)==6){}else{array2.push(innerEach);}}else if(dropdownSelected==\"19:00\"){if(innerEach.name==\"S2\"&&Number(innerEach.numberOfAdmissions)==6||Number(innerEach.numberOfAdmissions)>NUMBER_OF_ADMISSIONS_CAP){}else{array2.push(innerEach);}}});const newElement=getS3;let index=0;for(let i=0;i<array2.length;i++){if(array2[i].name==\"N1\"){index=i;}}if(index!==-1){// Insert the new element after the found element\narray2.splice(index+1,0,newElement);}setArray1(array1&&array1.map(each=>{if(window.location.hostname==='localhost'&&SHOW_ADMISSIONS_WITH_DETAILS){return each.name;// return `${each.name}(${each.normalizedAlr},${each.normalizedClr},${each.composite})`;\n}else{return each.name;}}));setArray2(array2&&array2.map(each=>{if(window.location.hostname==='localhost'&&SHOW_ADMISSIONS_WITH_DETAILS){return each.name;// return `${each.name}(${each.normalizedAlr},${each.normalizedClr},${each.composite})`;\n}else{return each.name;}}));const combinedArr=array1.concat(array2);shiftsCombined=combinedArr;}shiftsCombined.map((each,eachIndex)=>{if(SHOW_ROWS_COPY[dropdownSelected].includes(each.name)){if(dropdownSelected==\"17:00\"){if(window.location.hostname==='localhost'&&SHOW_ADMISSIONS_WITH_DETAILS){orderOfAdmissions.push(each.name);// orderOfAdmissions.push(`${each.name}(${each.normalizedAlr},${each.normalizedClr},${each.composite})`)\n}else{orderOfAdmissions.push(each.name);}}else if(dropdownSelected==\"19:00\"){if(Number(each.numberOfAdmissions)<=NUMBER_OF_ADMISSIONS_CAP){if(window.location.hostname==='localhost'&&SHOW_ADMISSIONS_WITH_DETAILS){orderOfAdmissions.push(each.name);// orderOfAdmissions.push(`${each.name}(${each.normalizedAlr},${each.normalizedClr},${each.composite})`)\n}else{orderOfAdmissions.push(each.name);}}}}});if(shiftsCombined&&shiftsCombined.length==0){shiftsCombined=timeObj.shifts;}setOrderOfAdmissions(orderOfAdmissions.join(\">\"));setExplanation(explanationArr);setSortRoles(timeObj,dropdownSelected,lastSavedTime);setAllAdmissionsDataShifts(timeObj);sortByAscendingName(timeObj);return orderOfAdmissions.join(\">\");};const getFormattedOutput=each=>{return`${each.name} [ ${each.timestamp?moment(each.timestamp,TIME_FORMAT).format(TIME_FORMAT):\"--:-- --\"} ] (${each.numberOfAdmissions?each.numberOfAdmissions:\" \"}/${each.numberOfHoursWorked})=${each.chronicLoadRatio}`;};const getMomentTimeWithoutUndefined=time=>{return time?moment(time,TIME_FORMAT).format(TIME_FORMAT):\"--:-- --\";};const convertTo12HourFormatSimple=time24=>{const[hours]=time24&&time24.split(':').map(Number);const period=hours>=12?'PM':'AM';const hours12=hours%12||12;return`${hours12}:00${period}`;};const onChange=(e,admissionsId)=>{if(dropdown==\"17:00\"){setClickedGenerateQueue(false);}const{name,value}=e.target;const newObj={};const updatedShifts=allAdmissionsDataShifts&&allAdmissionsDataShifts.shifts&&allAdmissionsDataShifts.shifts.map(item=>item.admissionsId===admissionsId&&name?{...item,[name]:value}:item);updatedShifts.map((each,eachIndex)=>{const timeDiff=getTimeDifference(each.timestamp);;each[\"startTime\"]=dropdown;each[\"minutesWorkedFromStartTime\"]=getMinutesWorkedFromStartTime(each);each[\"numberOfHoursWorked\"]=getNumberOfHoursWorked(each);each[\"chronicLoadRatio\"]=getChronicLoadRatio(each);each[\"difference\"]=timeDiff;each[\"alr\"]=getAlr(each,each.difference);each[\"clr\"]=getClr(each);each[\"normalizedAlr\"]=getNormalizedAlr(each,each.alr);each[\"normalizedClr\"]=getNormalizedClr(each,each.clr);each[\"composite\"]=getComposite(each,each.normalizedAlr,each.normalizedClr);return each;});newObj[\"startTime\"]=dropdown;newObj[\"shifts\"]=updatedShifts?updatedShifts:[];setAllAdmissionsDataShifts(newObj);};const getChronicLoadRatio=admission=>{const timeDifference=admission.numberOfHoursWorked;const chronicLoadRatio=(Number(admission.numberOfAdmissions)/Number(timeDifference)).toFixed(2);if(chronicLoadRatio==\"NaN\"||chronicLoadRatio==\"Infinity\"){return\"0.00\";}else{return chronicLoadRatio?chronicLoadRatio:\"\";}};const getTimeDifference=time1=>{if(time1){const time2=dropdown;// Convert times to minutes\nconst[hours1,minutes1]=time1.split(':').map(Number);const[hours2,minutes2]=time2.split(':').map(Number);const totalMinutes1=hours1*60+minutes1;const totalMinutes2=hours2*60+minutes2;// Calculate difference in minutes\nlet diffMinutes=totalMinutes2-totalMinutes1;return diffMinutes;}else{return 0;}};const getAlr=(each,difference)=>{let p95=\"\";if(dropdown==\"19:00\"){p95=config.P95_7PM;}else if(dropdown==\"17:00\"){p95=config.P95_5PM;}let fixedDiff=difference;if(difference>p95){fixedDiff=p95;}let increaseAlr=0;if(!window.Cypress&&dropdown==\"19:00\"){if(each.name==\"N5\"&&each.numberOfAdmissions>1){increaseAlr=Number(each.numberOfAdmissions)-1;}else{lastSaved5Pm&&lastSaved5Pm.shifts&&lastSaved5Pm.shifts.forEach((fivePm,eachIndex)=>{if(each.name==fivePm.name){if(fivePm.numberOfAdmissions!==\"\"&&Number(fivePm.numberOfAdmissions)+2<=Number(each.numberOfAdmissions)){increaseAlr=Number(each.numberOfAdmissions)-Number(fivePm.numberOfAdmissions)-1;}}});}}const originalAlr=Number(1-fixedDiff/p95);const updatedAlr=originalAlr+increaseAlr;return updatedAlr.toFixed(3);};const getClr=each=>{const admissions=Number(each.numberOfAdmissions);let clr=0;if(dropdown==\"19:00\"){if(each.name==\"S2\"){clr=Number(admissions)/8;}else if(each.name==\"S3\"){clr=Number(admissions)/6;}else if(each.name==\"S4\"){clr=Number(admissions)/5;}else if(each.name==\"N5\"){clr=Number(admissions)/2;}return clr.toFixed(3);}else if(dropdown==\"17:00\"){if(each.name==\"S1\"){clr=Number(admissions)/7;}else if(each.name==\"S2\"){clr=Number(admissions)/6;}else if(each.name==\"S3\"){clr=Number(admissions)/4;}else if(each.name==\"S4\"){clr=Number(admissions)/3;}return clr.toFixed(3);}};const getComposite=(each,normalizedAlr,normalizedClr,dropdownSelected)=>{const alr_f=dropdownSelected==\"17:00\"?config.ALR_5PM:config.ALR_7PM;const clr_f=dropdownSelected==\"17:00\"?config.CLR_5PM:config.CLR_7PM;let res=(alr_f*Number(normalizedAlr)+clr_f*Number(normalizedClr)).toFixed(3);if(dropdown==\"17:00\"){if(each.name==\"N5\"){res=config.CONSTANT_COMPOSITE_5PM_N5;return config.CONSTANT_COMPOSITE_5PM_N5;}}else if(dropdown==\"19:00\"){if(each.name==\"N1\"){res=config.CONSTANT_COMPOSITE_7PM_N1;return config.CONSTANT_COMPOSITE_7PM_N1;}else if(each.name==\"N2\"){res=config.CONSTANT_COMPOSITE_7PM_N2;return config.CONSTANT_COMPOSITE_7PM_N2;}else if(each.name==\"N3\"){res=config.CONSTANT_COMPOSITE_7PM_N3;return config.CONSTANT_COMPOSITE_7PM_N3;}else if(each.name==\"N4\"){res=config.CONSTANT_COMPOSITE_7PM_N4;return config.CONSTANT_COMPOSITE_7PM_N4;}}return Number(res).toFixed(3);};const getNormalizedAlr=(each,alrx)=>{let p95_alr=\"\";if(dropdown==\"17:00\"){p95_alr=1.00;}else if(dropdown==\"19:00\"){p95_alr=1.00;}const normalizedAlr=Number(alrx)/p95_alr;return Number(normalizedAlr).toFixed(3);};const getNormalizedClr=(each,clrx)=>{let p95_clr=\"\";if(dropdown==\"17:00\"){p95_clr=1.00;}else if(dropdown==\"19:00\"){p95_clr=1.00;}const normalizedAlr=clrx/p95_clr;return Number(normalizedAlr).toFixed(3);};const getNumberOfHoursWorked=admission=>{let startTime=\"\";SHIFT_TYPES.forEach((shift,shiftIndex)=>{if(shift.name===admission.name){startTime=shift.start;}});const now=admission.startTime;const timeDifference=moment(now,TIME_FORMAT).diff(moment(startTime,TIME_FORMAT),\"hours\",true).toFixed();return timeDifference?timeDifference:\"\";};const getMinutesWorkedFromStartTime=admission=>{const now=getMomentTimeWithoutUndefined(admission.startTime);const timeDifference=moment(now,TIME_FORMAT).diff(moment(admission.timestamp,TIME_FORMAT),\"minutes\",true).toFixed();return timeDifference?timeDifference:\"\";};const timesDropdown=()=>{return/*#__PURE__*/_jsx(\"select\",{value:dropdown,name:\"timesdropdown\",className:isMobileDevice()?\"timesdropdownwithoutsnapshot\":\"timesdropdown\",id:\"timesdropdown\",onChange:e=>{const startTime=e.target.value;if(startTime==\"19:00\"&&clickedGenerateQueue){const getMostRecentTransactionx=async startTime=>{const res=await getMostRecentTransaction(startTime);if(!res.success){const newObj={};newObj[\"startTime\"]=\"19:00\";newObj[\"shifts\"]=SHIFT_TYPES;setDropdown(\"19:00\");sortMain(newObj,\"19:00\");}else if(res&&res.transaction){let getN5={};res.transaction.admissionsObj.allAdmissionsDataShifts.shifts.forEach((each,eachIndex)=>{if(each.name==\"N5\"){getN5=each;return;}});const newObj={};const shifts=[];allAdmissionsDataShifts.shifts.forEach((each,eachIndex)=>{if(each.name==\"N5\"){each=getN5;}shifts.push(each);});newObj[\"startTime\"]=\"19:00\";newObj[\"shifts\"]=shifts;setDropdown(\"19:00\");// setAllAdmissionsDataShifts(newObj);\nsortMain(newObj,\"19:00\");// setLastSaved(\"\")\n}};getMostRecentTransactionx(\"19:00\");}else{setClickedGenerateQueue(false);setDropdown(startTime);setLastSaved(\"\");setAllAdmissionsDataShifts({shifts:SHIFT_TYPES,dropdown:startTime});const getMostRecentTransactionx=async startTime=>{const res=await getMostRecentTransaction(startTime);if(res&&res.transaction){const order=res.transaction.order;const allAdmissionsDataShiftsx=res.transaction.admissionsObj.allAdmissionsDataShifts;const lastSavedTime=res.transaction.localDateTime;// if (allAdmissionsDataShiftsx) {\n//     setAllAdmissionsDataShifts(allAdmissionsDataShiftsx);\n// }\nif(order.split(\">\").length>10){const splitArr=order.split(\">\");function splitArrayAtSecondOccurrence(arr,value){let count=0;let splitIndex=-1;for(let i=0;i<arr.length;i++){if(arr[i]===value){count++;if(count===2){splitIndex=i;break;}}}if(splitIndex!==-1){setArray1(arr.slice(0,splitIndex));setArray2(arr.slice(splitIndex));return[arr.slice(0,splitIndex),arr.slice(splitIndex)];}else{return[arr];}}setOrderOfAdmissions(order);splitArrayAtSecondOccurrence(splitArr,\"N1\");}else if(order){setOrderOfAdmissions(order);}if(lastSavedTime){setLastSaved(lastSavedTime);}// setSortRoles(allAdmissionsDataShiftsx, startTime, lastSavedTime);\nsortMain(allAdmissionsDataShiftsx,startTime);}};getMostRecentTransactionx(startTime);}},children:START_TIMES.map((startTime,startTimeIndex)=>{return/*#__PURE__*/_jsx(\"option\",{value:`${startTime.value}`,children:`${startTime.label}`});})});};const sortByAscendingName=admissionsDatax=>{const returnObjShifts=admissionsDatax.shifts.sort((a,b)=>{return ROLE_ORDER.indexOf(a.name)-ROLE_ORDER.indexOf(b.name);});let returnObj={};returnObj.startTime=admissionsDatax.startTime;returnObj.shifts=returnObjShifts;setAllAdmissionsDataShifts(returnObj);};const isMobileDevice=()=>{if(/Mobi|Android|iPhone|iPad|iPod|BlackBerry|Windows Phone/i.test(navigator.userAgent)){// console.log(\"User is on a phone or tablet.\");\nreturn true;}else{// console.log(\"User is on a desktop.\");\nreturn false;}};const takeScreenshot=async()=>{const element=document.getElementById(\"screenshotimg\");// Capture the div as a canvas\nconst canvas=await html2canvas(element);// Convert the canvas to a Blob\ncanvas.toBlob(async blob=>{if(!blob){alert('Failed to capture the screenshot.');return;}// Copy the Blob to the clipboard\ntry{const clipboardItem=new ClipboardItem({'image/png':blob});await navigator.clipboard.write([clipboardItem]);alert('✅ Screenshot copied to clipboard!');}catch(err){console.error('Failed to copy the screenshot to the clipboard:',err);alert('Failed to copy the screenshot. Check your browser permissions.');}});};const setSortRoles=function(admissionsDatax,dropdownSelected){let lastSavedTime=arguments.length>2&&arguments[2]!==undefined?arguments[2]:\"\";const sortRoles=[];let sortRolesNameOnly=[];let timeObjShifts=admissionsDatax.shifts;//sort by name\nconst customOrder=[\"DA\",\"S1\",\"S2\",\"S3\",\"S4\",\"N5\",\"N1\",\"N2\",\"N3\",\"N4\"];// Sort the data based on the custom order\ntimeObjShifts&&Array.isArray(timeObjShifts)&&timeObjShifts.sort((a,b)=>{const indexA=customOrder.indexOf(a.name);const indexB=customOrder.indexOf(b.name);// If the names are not in the custom order, move them to the end\nreturn(indexA!==-1?indexA:Infinity)-(indexB!==-1?indexB:Infinity);});// let sevenPmS4greaterThanCap = false;\ntimeObjShifts&&Array.isArray(timeObjShifts)&&timeObjShifts.forEach((each,eachIndex)=>{if(SHOW_ROWS_COPY[dropdownSelected].includes(each.name)){if(dropdown==\"17:00\"){if(each.numberOfHoursWorked+\"\"!==\"0\"){sortRoles.push(getFormattedOutput(each));}if(Number(each.numberOfAdmissions)<=NUMBER_OF_ADMISSIONS_CAP){sortRolesNameOnly.push(`${each.name}(${each.chronicLoadRatio})`);}}else if(dropdown==\"19:00\"){if(each.numberOfHoursWorked+\"\"!==\"0\"){if(Number(each.numberOfAdmissions)>NUMBER_OF_ADMISSIONS_CAP){sortRoles.push(getFormattedOutput(each)+\" (DONE)\");}else{sortRoles.push(getFormattedOutput(each));}}if(Number(each.numberOfAdmissions)<=NUMBER_OF_ADMISSIONS_CAP){if(window.location.hostname==='localhost'&&SHOW_ADMISSIONS_WITH_DETAILS){sortRolesNameOnly.push(`${each.name}(${each.chronicLoadRatio})`);}else{sortRolesNameOnly.push(each.name);}}}}});sortRoles.push(`${sortRolesNameOnly.join(\">\")}`);return timeObjShifts;};const handleGenerateQueue=async e=>{setClickedGenerateQueue(true);const orderOfAdmissions_=sortMain(allAdmissionsDataShifts,dropdown);if(!doNotStoreInDb){try{// Wait for addTransaction to complete before fetching the recent transaction\nawait addTransaction({allAdmissionsDataShifts,startTime:dropdown},orderOfAdmissions_);// Now fetch the most recent transaction\nconst result=await getMostRecentTransaction(dropdown);// console.log(\"recent transaction\", result);\nif(result.success){setLastSaved(result.transaction.localDateTime);setAllAdmissionsDataShifts(allAdmissionsDataShifts);setDropdown(dropdown);if(dropdown===\"17:00\"){setLastSaved5Pm(result.transaction.admissionsObj.allAdmissionsDataShifts);}}}catch(error){console.error(\"Error generating queue:\",error);}}};const handleKeyDown=(e,rowIndex)=>{const data=allAdmissionsDataShifts.shifts;if(e.key==='ArrowDown'){e.preventDefault();if(rowIndex<data.length-1){const getInputById=document.getElementById(`${e.target.name}_${rowIndex+1}`);if(getInputById){getInputById.focus();}}}else if(e.key==='ArrowUp'){e.preventDefault();// Prevent the default action (scrolling)\n// Move to the previous row\nif(rowIndex>0){const getInputById=document.getElementById(`${e.target.name}_${rowIndex-1}`);if(getInputById){getInputById.focus();}}}else if(e.target.name==\"numberOfAdmissions\"&&e.key===\"ArrowLeft\"){const getElementById=document.getElementById(`timestamp_${rowIndex}`);if(getElementById){getElementById.focus();}}else if(e.target.name==\"timestamp\"&&e.key===\"ArrowRight\"){const getElementById=document.getElementById(`numberOfAdmissions_${rowIndex}`);if(getElementById){getElementById.focus();}}};function hasTwoOccurrences(str,target){// Split the string by the target substring and check if there are more than 2 parts\nconst parts=str.split(target);return parts.length>2;}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"header\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-blue-900 text-white py-6 px-4 relative\",children:[/*#__PURE__*/_jsx(Logout,{}),\" \",/*#__PURE__*/_jsx(\"h1\",{className:\"text-5xl font-bold text-center tracking-widest leading-tight\",children:\"S.A.D.Q\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-center text-lg mt-2\",children:\"Standardized Admissions Distribution Queue\"})]})}),loading?/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"spinner\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"rect1\"}),/*#__PURE__*/_jsx(\"div\",{className:\"rect2\"}),/*#__PURE__*/_jsx(\"div\",{className:\"rect3\"}),/*#__PURE__*/_jsx(\"div\",{className:\"rect4\"}),/*#__PURE__*/_jsx(\"div\",{className:\"rect5\"})]})}):/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-container-just1item\",children:timesDropdown()}),!isMobileDevice()&&/*#__PURE__*/_jsx(\"img\",{alt:\"copy button\",className:\"copybutton\",id:\"snapshot-button\",src:snapshotImg,onClick:ev=>{takeScreenshot();}}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setOpenTable(!openTable),className:\"expand\",children:openTable?\"Minimize Table ⬆️\":\"Expand Table ⬇️\"}),/*#__PURE__*/_jsxs(\"table\",{id:\"screenshotimg\",children:[/*#__PURE__*/_jsxs(\"table\",{id:\"reacttable\",children:[/*#__PURE__*/_jsx(\"thead\",{children:openTable?/*#__PURE__*/_jsx(\"tr\",{children:MINIMIZE_TABLE_STATIC_COMPOSITE_WEB.map((each,eachIndex)=>{if(each[0]==\"name\"){return/*#__PURE__*/_jsx(\"th\",{className:\"th_10percent\",children:each[1]},eachIndex);}else if(each[0]==\"timestamp\"||each[0]==\"numberOfAdmissions\"||each[0]==\"chronicLoadRatio\"){return/*#__PURE__*/_jsx(\"th\",{className:\"th_25percent\",children:each[1]},eachIndex);}return/*#__PURE__*/_jsx(\"th\",{children:each[1]},eachIndex);})}):isMobileDevice()?/*#__PURE__*/_jsx(\"tr\",{children:MINIMIZE_TABLE_STATIC_COMPOSITE_MOBILE.map((each,eachIndex)=>{if(each[0]==\"name\"){return/*#__PURE__*/_jsx(\"th\",{className:\"th_10percent\",children:each[1]},eachIndex);}else if(each[0]==\"timestamp\"||each[0]==\"numberOfAdmissions\"||each[0]==\"chronicLoadRatio\"){return/*#__PURE__*/_jsx(\"th\",{className:\"th_25percent\",children:each[1]},eachIndex);}return/*#__PURE__*/_jsx(\"th\",{children:each[1]},eachIndex);})}):/*#__PURE__*/_jsx(\"tr\",{children:MINIMIZE_TABLE_STATIC_COMPOSITE_MOBILE.map((each,eachIndex)=>{if(each[0]==\"name\"){return/*#__PURE__*/_jsx(\"th\",{className:\"th_10percent\",children:each[1]},eachIndex);}else if(each[0]==\"timestamp\"||each[0]==\"numberOfAdmissions\"||each[0]==\"chronicLoadRatio\"){return/*#__PURE__*/_jsx(\"th\",{className:\"th_25percent\",children:each[1]},eachIndex);}return/*#__PURE__*/_jsx(\"th\",{children:each[1]},eachIndex);})})}),/*#__PURE__*/_jsx(\"tbody\",{children:allAdmissionsDataShifts.shifts&&allAdmissionsDataShifts.shifts.length>0&&allAdmissionsDataShifts.shifts.map((admission,indexx)=>{let index=0;if(SHOW_ROWS_TABLE[dropdown]&&SHOW_ROWS_TABLE[dropdown].includes(admission.name)){index=SHOW_ROWS_TABLE[dropdown].findIndex(user=>user==admission.name);return!admission.isStatic&&/*#__PURE__*/_jsxs(\"tr\",{style:SHOW_ROWS_TABLE[dropdown]&&SHOW_ROWS_TABLE[dropdown].includes(admission.name)?{}:{display:\"none\"},id:\"admissionsDataRow_\"+index,className:\"admissionsDataRow\",children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{name:`name_${index}`,className:\"bold-fields\",value:admission.name||\"\",type:\"text\",disabled:true})}),/*#__PURE__*/_jsx(\"td\",{className:\"usercanedit\",tabIndex:-1,onKeyDown:e=>handleKeyDown(e,index),children:/*#__PURE__*/_jsx(\"input\",{id:`timestamp_${index}`,name:\"timestamp\",className:\"timestamp\",value:admission.timestamp||\"\",type:\"time\",onChange:e=>onChange(e,admission.admissionsId),disabled:admission.isStatic})}),/*#__PURE__*/_jsxs(\"td\",{className:\"usercanedit cell-with-number\",tabIndex:-1,onKeyDown:e=>handleKeyDown(e,index),children:[/*#__PURE__*/_jsx(\"span\",{className:\"small-number\",children:getXIn2Hours(admission)}),/*#__PURE__*/_jsx(\"input\",{id:`numberOfAdmissions_${index}`,name:\"numberOfAdmissions\",className:\"numberOfAdmissions\",value:admission.numberOfAdmissions||\"\",step:\"1\",type:\"number\",placeholder:\"---\",onChange:e=>onChange(e,admission.admissionsId),disabled:admission.isStatic,inputMode:\"numeric\",pattern:\"[0-9]*\"})]}),openTable&&/*#__PURE__*/_jsx(\"td\",{className:\"backgroundlightgray\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"progress-cell\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",style:{width:`${(admission.normalizedAlr||0)*100}%`,background:(admission.normalizedAlr||0)>0.5?\"linear-gradient(to right, #800000, #800000)\"/* Red gradient */:\"linear-gradient(to right, #800000, #800000)\"/* Green gradient */}})}),/*#__PURE__*/_jsx(\"span\",{className:\"progress-text\",children:admission.normalizedAlr?Number(admission.normalizedAlr).toFixed(2):\"\"})]})}),/*#__PURE__*/_jsx(\"td\",{className:\"backgroundlightgray\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"progress-cell\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",style:{width:`${(admission.clr||0)*100}%`,background:(admission.clr||0)>0.5?\"linear-gradient(to right, #1a0dab, #1a0dab)\"/* Red gradient */:\"linear-gradient(to right,  #1a0dab, #1a0dab)\"/* Green gradient */}})}),/*#__PURE__*/_jsx(\"span\",{className:\"progress-text\",children:openTable?Number(admission.clr).toFixed(2):`${Math.round((admission.clr||0)*100)}%`})]})}),false&&openTable&&/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{name:\"numberHoursWorked\",value:admission.numberOfHoursWorked||\"\",type:\"number\",placeholder:\"Enter number\",disabled:true})}),openTable&&/*#__PURE__*/_jsx(\"td\",{className:\"backgroundlightgray\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"progress-cell\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",style:{width:`${(admission.composite||0)*100}%`,background:(admission.composite||0)>0.5?\"linear-gradient(to right, #1a0dab, #1a0dab)\"/* Red gradient */:\"linear-gradient(to right,  #1a0dab, #1a0dab)\"/* Green gradient */}})}),/*#__PURE__*/_jsx(\"span\",{className:\"progress-text\",children:admission.composite?Number(admission.composite).toFixed(2):\"\"})]})})]},admission.admissionsId);}})})]}),/*#__PURE__*/_jsx(\"p\",{className:\"endoutputcenter\",id:\"orderofadmissions_title\",children:`Order of Admits ${lastSaved}`}),window.location.hostname==='localhost'&&SHOW_ADMISSIONS_WITH_DETAILS&&originalAlgorithm?/*#__PURE__*/_jsx(\"p\",{className:\"endoutputcenter\",id:\"orderofadmissions_output\",children:orderOfAdmissions&&orderOfAdmissions}):hasTwoOccurrences(orderOfAdmissions,\"N1\")?/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"p\",{className:\"endoutputcenter\",id:\"orderofadmissions_output\",children:[array1?`(${array1.join(\">\")})¹`:\"\",/*#__PURE__*/_jsx(\"br\",{}),array2&&`(${array2.join(\">\")})ⁿ`]})}):/*#__PURE__*/_jsx(\"p\",{className:\"endoutputcenter\",id:\"orderofadmissions_output\",children:orderOfAdmissions}),/*#__PURE__*/_jsx(\"div\",{className:\"lastsaved-yellowmessage\"})]}),/*#__PURE__*/_jsx(\"section\",{children:/*#__PURE__*/_jsx(\"button\",{id:\"generateQueue\",onClick:e=>{handleGenerateQueue(e);if(\"vibrate\"in navigator){navigator.vibrate(200);}},children:\"Generate Queue\"})}),seeDetails&&/*#__PURE__*/_jsxs(\"fieldset\",{className:\"notes\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"bold\",children:\"Explanation\"}),/*#__PURE__*/_jsx(\"button\",{className:\"explanation\",onClick:()=>{setShow2(!show2);},children:!show2?\"> Step by Step\":\"< Step by Step\"}),/*#__PURE__*/_jsx(\"br\",{}),show2&&/*#__PURE__*/_jsxs(\"div\",{id:\"stepbystepdetails\",children:[explanation&&explanation.map((line,lineIndex)=>{if(line==\"\\n\"){return/*#__PURE__*/_jsx(\"br\",{});}else{return/*#__PURE__*/_jsx(\"p\",{children:line});}}),/*#__PURE__*/_jsx(\"br\",{})]}),/*#__PURE__*/_jsx(\"input\",{id:\"doNotStoreInDb\",placeholder:\"Generate Queue without Storing in Database\",className:\"input-left\",label:\"\",type:\"checkbox\",onChange:e=>{setDoNotStoreInDb(e.target.checked);}}),/*#__PURE__*/_jsx(\"label\",{for:\"originalAlgorithm\",children:\"Generate Queue without Storing in Database\"}),show4&&/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{id:\"originalAlgorithmCheckbox\",placeholder:\"Original Algorithm\",className:\"input-left\",label:\"\",type:\"checkbox\",onChange:e=>{setOriginalAlgorithm(e.target.checked);}}),/*#__PURE__*/_jsx(\"label\",{for:\"originalAlgorithm\",children:\"Original Algorithm v1.0\"})]})})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"footer\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"footer-text\",children:[\"\\xA9 \",new Date().getFullYear(),\" Genki MD LLC\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"footer-text\",children:\"All rights reserved. Licensed use only.\"}),/*#__PURE__*/_jsx(\"p\",{className:\"footer-text\",children:\"This tool is for workflow support only. Providers are responsible for final admission and care decisions.\"})]})]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","moment","SHIFT_TYPES","START_TIMES","CHRONIC_LOAD_RATIO_THRESHOLD","TIME_FORMAT","ROLE_ORDER","SHOW_ROWS_TABLE","SHOW_ROWS_COPY","CHRONIC_LOAD_RATIO_THRESHOLD_S4","NUMBER_OF_ADMISSIONS_CAP","ROLES_WITH_DEFAULT_TIMES","CONSTANT_COMPOSITE_5PM","CONSTANT_COMPOSITE_7PM","CONSTANT_COMPOSITE_5PM_N5","CONSTANT_COMPOSITE_7PM_N1","CONSTANT_COMPOSITE_7PM_N2","CONSTANT_COMPOSITE_7PM_N3","CONSTANT_COMPOSITE_7PM_N4","P95_7PM","P95_5PM","MINIMIZE_TABLE_STATIC_COMPOSITE_WEB","MINIMIZE_TABLE_STATIC_COMPOSITE_MOBILE","ALR_5PM","CLR_5PM","ALR_7PM","CLR_7PM","SHOW_ADMISSIONS_WITH_DETAILS","snapshotImg","githublogo","emailjs","CONFIG1","CopyMessages","addTransaction","deleteAllTransactions","getMostRecentTransaction","fetchConfigValues","html2canvas","useNavigate","getAuth","signOut","Logout","jsx","_jsx","jsxs","_jsxs","CONFIG","App","allAdmissionsDataShifts","setAllAdmissionsDataShifts","startTime","shifts","seeDetails","setSeeDetails","explanation","setExplanation","openTable","setOpenTable","dropdown","setDropdown","lastSaved","setLastSaved","loading","setLoading","orderOfAdmissions","setOrderOfAdmissions","array1","setArray1","array2","setArray2","clickedGenerateQueue","setClickedGenerateQueue","originalAlgorithm","setOriginalAlgorithm","show2","setShow2","show3","setShow3","show4","setShow4","config","setConfig","lastSaved5Pm","setLastSaved5Pm","doNotStoreInDb","setDoNotStoreInDb","navigate","auth","handleLogout","error","console","init","REACT_APP_EMAILJS_PUBLIC_KEY","loadConfig","data","log","err","localDateTime","Object","keys","length","fetchRecentTransaction","default5PMIfBetween7AMAnd6PM","now","Date","currentHour","getHours","result","success","transaction","admissionsObj","sortMain","order","splitOrderOfAdmissions","orderString","parts","split","map","item","firstN1Index","indexOf","secondN1Index","slice","array1x","array2x","fetchRecent5PMTransaction","isXIn2Hours","each","forEach","fivePm","eachIndex","name","numberOfAdmissions","Number","is3In2Hours","getXIn2Hours","sortMainOriginal","timeObj","dropdownSelected","lastSavedTime","arguments","undefined","getMinutesWorkedFromStartTime","getNumberOfHoursWorked","getChronicLoadRatio","timestamp","explanationArr","push","newObject","JSON","parse","stringify","includes","timestampDefault","sort","a","b","chronicLoadRatio","getFormattedOutput","shiftsLessThanThreshold","shiftsGreaterThanThreshold","window","Cypress","numberOfHoursWorked","shiftsCombined","concat","scenario1","scenario2","scenario3","s4HasFiveAdmissions","s4HasFiveAdmissions_obj","innerEach","innerEachIndex","index","findIndex","obj","removed","splice","location","hostname","normalizedAlr","normalizedClr","composite","combinedArr","getS4","newElement","i","getS3","copyArray2","join","setSortRoles","sortByAscendingName","sortMainByCompositeScoreStatic","differenceArr","alrArr","clrArr","compositeArr","normalizedAlrExplanation","normalizedClrExplanation","compositeArrExplanation","getAlrExplanation","alrx","p95","fixedDiff","difference","getClrExplanation","clrx","admissions","clr","str","toFixed","getCompositeExplanation","isFinalExplanation","alr_f","clr_f","res","getNormalizedAlrExplanation","p95_alr","alr","getNormalizedClrExplanation","p95_clr","getAlrx","increaseAlr","originalAlr","updatedAlr","getClrx","getCompositex","getNormalizedAlrx","getNormalizedClrx","getTimeDifferencex","time1","time2","hours1","minutes1","hours2","minutes2","totalMinutes1","totalMinutes2","diffMinutes","lessThan2Hours","greaterThan2Hours","hasAnyGreaterThan2Hours","format","getMomentTimeWithoutUndefined","time","convertTo12HourFormatSimple","time24","hours","period","hours12","onChange","e","admissionsId","value","target","newObj","updatedShifts","timeDiff","getTimeDifference","getAlr","getClr","getNormalizedAlr","getNormalizedClr","getComposite","admission","timeDifference","shift","shiftIndex","start","diff","timesDropdown","className","isMobileDevice","id","getMostRecentTransactionx","getN5","allAdmissionsDataShiftsx","splitArr","splitArrayAtSecondOccurrence","arr","count","splitIndex","children","startTimeIndex","label","admissionsDatax","returnObjShifts","returnObj","test","navigator","userAgent","takeScreenshot","element","document","getElementById","canvas","toBlob","blob","alert","clipboardItem","ClipboardItem","clipboard","write","sortRoles","sortRolesNameOnly","timeObjShifts","customOrder","Array","isArray","indexA","indexB","Infinity","handleGenerateQueue","orderOfAdmissions_","handleKeyDown","rowIndex","key","preventDefault","getInputById","focus","hasTwoOccurrences","alt","src","onClick","ev","indexx","user","isStatic","style","display","type","disabled","tabIndex","onKeyDown","step","placeholder","inputMode","pattern","width","background","Math","round","vibrate","line","lineIndex","checked","for","getFullYear"],"sources":["/Users/marikalam/workspace/genkimd-sad/src/HomePage.js"],"sourcesContent":["// import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport {\n    SHIFT_TYPES,\n    START_TIMES,\n    CHRONIC_LOAD_RATIO_THRESHOLD,\n    TIME_FORMAT,\n    ROLE_ORDER,\n    SHOW_ROWS_TABLE,\n    SHOW_ROWS_COPY,\n    CHRONIC_LOAD_RATIO_THRESHOLD_S4,\n    NUMBER_OF_ADMISSIONS_CAP,\n    ROLES_WITH_DEFAULT_TIMES,\n    CONSTANT_COMPOSITE_5PM,\n    CONSTANT_COMPOSITE_7PM,\n    CONSTANT_COMPOSITE_5PM_N5,\n    CONSTANT_COMPOSITE_7PM_N1,\n    CONSTANT_COMPOSITE_7PM_N2,\n    CONSTANT_COMPOSITE_7PM_N3,\n    CONSTANT_COMPOSITE_7PM_N4,\n    P95_7PM,\n    P95_5PM,\n    MINIMIZE_TABLE_STATIC_COMPOSITE_WEB,\n    MINIMIZE_TABLE_STATIC_COMPOSITE_MOBILE,\n    ALR_5PM,\n    CLR_5PM,\n    ALR_7PM,\n    CLR_7PM,\n    SHOW_ADMISSIONS_WITH_DETAILS\n} from \"./constants\";\nimport snapshotImg from \"./images/snapshot.png\";\nimport githublogo from \"./images/github-mark.png\"\nimport emailjs from \"@emailjs/browser\";\nimport CONFIG1 from \"./config\";\nimport CopyMessages from \"./CopyMessages\";\nimport {\n    addTransaction, deleteAllTransactions, getMostRecentTransaction,\n    fetchConfigValues\n} from \"./transactionsApi\";\nimport html2canvas from \"html2canvas\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getAuth, signOut } from \"firebase/auth\"; // ✅ FIX: Make sure this is imported\nimport Logout from './LogoutButton'; // ✅ Correct default import\nconst CONFIG = CONFIG1;\n\nexport function App() {\n    // deleteAllTransactions(\"17:00\")\n    // deleteAllTransactions(\"16:00\")\n    // deleteAllTransactions(\"19:00\")\n    const [allAdmissionsDataShifts, setAllAdmissionsDataShifts] = useState({ startTime: \"17:00\", shifts: SHIFT_TYPES })\n\n    const [seeDetails, setSeeDetails] = useState(false);\n    const [explanation, setExplanation] = useState(\"\");\n    const [openTable, setOpenTable] = useState(false);\n    const [dropdown, setDropdown] = useState(\"17:00\");\n    const [lastSaved, setLastSaved] = useState(\"\");\n    const [loading, setLoading] = useState(true);\n    const [orderOfAdmissions, setOrderOfAdmissions] = useState(\"\");\n    const [array1, setArray1] = useState(\"\");\n    const [array2, setArray2] = useState(\"\");\n    const [clickedGenerateQueue, setClickedGenerateQueue] = useState(false);\n    const [originalAlgorithm, setOriginalAlgorithm] = useState(false);\n    const [show2, setShow2] = useState(false);\n    const [show3, setShow3] = useState(false);\n    const [show4, setShow4] = useState(false);\n    const [config, setConfig] = useState({});\n    const [lastSaved5Pm, setLastSaved5Pm] = useState({})\n    const [doNotStoreInDb, setDoNotStoreInDb] = useState(false);\n\n    const navigate = useNavigate(); // ✅ FIX: Inside the component\n    const auth = getAuth();\n\n    const handleLogout = async () => {\n        try {\n            await signOut(auth);\n            navigate(\"/\"); // Go back to login\n        } catch (error) {\n            console.error(\"Logout failed:\", error);\n        }\n    };\n\n    useEffect(() => {\n        emailjs.init(CONFIG.REACT_APP_EMAILJS_PUBLIC_KEY);\n\n\n        const loadConfig = async () => {\n            try {\n                const data = await fetchConfigValues();\n                console.log(\"Config values fetched:\", data); // Debugging\n                setConfig(data);\n            } catch (err) {\n                console.log(\"Failed to load configuration.\", err);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        loadConfig();\n    }, []);\n\n    useEffect(() => {\n        let localDateTime = \"\";\n\n        if (Object.keys(config).length === 0) {\n            console.log(\"Config not yet loaded, waiting...\");\n            return;\n        }\n\n        const fetchRecentTransaction = async () => {\n            function default5PMIfBetween7AMAnd6PM() {\n                const now = new Date();\n                const currentHour = now.getHours();\n                return currentHour >= 7 && currentHour < 18;\n            }\n\n            const result = await getMostRecentTransaction(\n                default5PMIfBetween7AMAnd6PM() ? \"17:00\" : \"19:00\"\n            );\n\n            if (result.success) {\n                setLastSaved(result.transaction.localDateTime);\n                if (\n                    result.transaction.admissionsObj.allAdmissionsDataShifts &&\n                    result.transaction.admissionsObj.allAdmissionsDataShifts.shifts\n                ) {\n                    setDropdown(result.transaction.admissionsObj.startTime);\n                    sortMain(\n                        result.transaction.admissionsObj.allAdmissionsDataShifts,\n                        result.transaction.admissionsObj.startTime\n                            ? result.transaction.admissionsObj.startTime\n                            : \"17:00\",\n                        localDateTime\n                    );\n                }\n                setOrderOfAdmissions(result.transaction.order);\n\n                const splitOrderOfAdmissions = (orderString) => {\n                    const parts = orderString.split(\">\").map(item => item.split(\"(\")[0]); // Extract only the shift names\n                    const firstN1Index = parts.indexOf(\"N1\");\n                    const secondN1Index = parts.indexOf(\"N1\", firstN1Index + 1);\n\n                    if (secondN1Index !== -1) {\n                        return [\n                            parts.slice(0, secondN1Index), // First array from start to second \"N1\"\n                            parts.slice(secondN1Index)     // Second array from second \"N1\" to end\n                        ];\n                    } else {\n                        return [parts, []]; // If no second \"N1\", return everything as first array\n                    }\n                };\n\n                const orderString = result.transaction.order;\n\n                const [array1x, array2x] = splitOrderOfAdmissions(orderString);\n\n\n\n                setArray1(array1x);\n                setArray2(array2x);\n            } else {\n                sortMain(\n                    allAdmissionsDataShifts,\n                    default5PMIfBetween7AMAnd6PM() ? \"17:00\" : \"19:00\",\n                    localDateTime\n                );\n            }\n        };\n\n        fetchRecentTransaction();\n\n        const fetchRecent5PMTransaction = async () => {\n            const result = await getMostRecentTransaction(\"17:00\");\n\n            if (result.success) {\n                setLastSaved5Pm(result.transaction.admissionsObj.allAdmissionsDataShifts);\n            }\n        };\n\n        fetchRecent5PMTransaction();\n    }, [config]);\n\n    const isXIn2Hours = (each) => {\n        let isXIn2Hours = false;\n\n        if (dropdown == \"19:00\") {\n            lastSaved5Pm && lastSaved5Pm.shifts && lastSaved5Pm.shifts.forEach((fivePm, eachIndex) => {\n                if (each.name == fivePm.name) {\n                    if (fivePm.numberOfAdmissions !== \"\" &&\n                        (Number(fivePm.numberOfAdmissions)) + 2 == Number(each.numberOfAdmissions)) {\n                        isXIn2Hours = true;\n                        return true;\n                    }\n                }\n            });\n        }\n        return isXIn2Hours;\n    }\n\n    const is3In2Hours = (each) => {\n        let is3In2Hours = false;\n\n        if (dropdown == \"19:00\") {\n            lastSaved5Pm && lastSaved5Pm.shifts && lastSaved5Pm.shifts.forEach((fivePm, eachIndex) => {\n                if (each.name == fivePm.name) {\n                    if (fivePm.numberOfAdmissions !== \"\" &&\n                        (Number(fivePm.numberOfAdmissions)) + 3 <= Number(each.numberOfAdmissions)) {\n                        is3In2Hours = true;\n                        return true;\n                    }\n                }\n            });\n        }\n        return is3In2Hours;\n    }\n\n    const getXIn2Hours = (each) => {\n        let isXIn2Hours = \"\";\n\n        if (dropdown == \"19:00\") {\n            if (each.name == \"N5\" && each.numberOfAdmissions >= 2) {\n                return each.numberOfAdmissions;\n            } else {\n                lastSaved5Pm && lastSaved5Pm.shifts && lastSaved5Pm.shifts.forEach((fivePm, eachIndex) => {\n                    if (each.name == fivePm.name) {\n                        if (fivePm.numberOfAdmissions !== \"\" &&\n                            (Number(fivePm.numberOfAdmissions)) + 2 <= Number(each.numberOfAdmissions)) {\n                            isXIn2Hours = Number(each.numberOfAdmissions) - Number(fivePm.numberOfAdmissions);\n                            return true;\n                        }\n                    }\n                });\n            }\n\n        }\n        return isXIn2Hours;\n    }\n\n    const sortMainOriginal = (timeObj, dropdownSelected, lastSavedTime = \"\") => {\n        const orderOfAdmissions = [];\n        timeObj && timeObj.shifts && timeObj.shifts && timeObj.shifts.forEach((each, eachIndex) => {\n            each[\"startTime\"] = timeObj.startTime ? timeObj.startTime : \"\";\n            each[\"minutesWorkedFromStartTime\"] = getMinutesWorkedFromStartTime(each);\n            each[\"numberOfHoursWorked\"] = getNumberOfHoursWorked(each);\n            each[\"chronicLoadRatio\"] = getChronicLoadRatio(each);\n            each[\"numberOfAdmissions\"] = each.numberOfAdmissions ? each.numberOfAdmissions : \"\";\n            each[\"timestamp\"] = each.timestamp ? each.timestamp : \"\"\n            return each;\n        });\n\n        const explanationArr = [];\n        explanationArr.push(\"Step 1: Rank Order Based on Acute Load (Time Since Last Admission). [ALR = 1 - (Current Time [17:00] - Last Admit Time)/config.P95_7PM]\");\n\n        /*\n        Step 1: Step 1: Sort based on timestamp. If timestamp is the same, sort by chronic load ratio\n        */\n        const newObject = JSON.parse(JSON.stringify(timeObj))\n        if (newObject.shifts) {\n            newObject.shifts.map((each, eachIndex) => {\n                if (ROLES_WITH_DEFAULT_TIMES[dropdownSelected] && ROLES_WITH_DEFAULT_TIMES[dropdownSelected].includes(each.name)) {\n                    each.timestamp = each.timestampDefault;\n                }\n                return each;\n            });\n\n            /* sort by timestamp. if timestamp is the same, sort by chronic load */\n            newObject && newObject.shifts && newObject.shifts.sort((a, b) => {\n                // Compare timestamps first\n                if (a.timestamp < b.timestamp) return -1;\n                if (a.timestamp > b.timestamp) return 1;\n\n                // If timestamps are equal, compare chronicLoadRatio\n                if (a.chronicLoadRatio < b.chronicLoadRatio) return -1;\n                if (a.chronicLoadRatio > b.chronicLoadRatio) return 1;\n\n                // If timestamps are equal, compare chronicLoadRatio\n                if (a.numberOfAdmissions < b.numberOfAdmissions) return -1;\n                if (a.numberOfAdmissions > b.numberOfAdmissions) return 1;\n\n                return 0; // If both are equal\n            });\n            //if same chronic load ratio, then pick the one with lower number of admissions to go first\n            newObject.shifts && newObject.shifts.forEach((each, eachIndex) => {\n                if (SHOW_ROWS_COPY[dropdownSelected].includes(each.name)) {\n                    explanationArr.push(getFormattedOutput(each))\n                }\n            });\n            /*\n            Step 2: For each admitter, if chronic load ratio is >0.67, then deprioritize in the order \n            (either putting in back or pushing back by X spots depending on how great the ratio is)\n            */\n            const shiftsLessThanThreshold = [];\n            const shiftsGreaterThanThreshold = [];\n            explanationArr.push(\"\\n\");\n            explanationArr.push(`Step 2: De-prioritize Admitters with High Chronic Load (Admits/Hours Worked)`);\n\n            newObject.shifts && newObject.shifts.forEach((each, eachIndex) => {\n                if (SHOW_ROWS_COPY[dropdownSelected].includes(each.name)) {\n                    if ((dropdownSelected == \"17:00\" && each.name === \"S4\" && (dropdown == \"19:00\" && (each.chronicLoadRatio > CHRONIC_LOAD_RATIO_THRESHOLD_S4))) ||\n                        (!window.Cypress && isXIn2Hours(each)) ||\n                        (dropdown == \"19:00\" && (each.chronicLoadRatio > CHRONIC_LOAD_RATIO_THRESHOLD))\n                    ) {\n                        // explanationArr.push(getFormattedOutput(each));\n                        explanationArr.push(`${each.name}: (${each.numberOfAdmissions ? each.numberOfAdmissions : \" \"}/${each.numberOfHoursWorked})=${each.chronicLoadRatio}`)\n\n                        shiftsGreaterThanThreshold.push(each);\n                    } else {\n                        shiftsLessThanThreshold.push(each);\n                    }\n                }\n\n            });\n\n            /* Step 3: De-prioritize admitters with high chronic load to the back of the queue */\n            explanationArr.push(\"\\n\");\n            explanationArr.push(`Step 3: De-prioritize admitters with high chronic load to the back of the queue.`)\n            let shiftsCombined = shiftsLessThanThreshold.concat(shiftsGreaterThanThreshold);\n\n            shiftsCombined.forEach((each, eachIndex) => {\n                explanationArr.push(getFormattedOutput(each))\n            });\n\n            /* Step 4: Remove roles with number of admissions greater than 7 */\n            explanationArr.push(\"\\n\");\n            explanationArr.push(`Step 4: Remove high-admission roles.`)\n            shiftsCombined.forEach((each, eachIndex) => {\n                if (dropdown == \"17:00\") {\n                    explanationArr.push(getFormattedOutput(each) + \" (DONE)\")\n                } else if (dropdown == \"19:00\") {\n                    if (each.numberOfAdmissions > NUMBER_OF_ADMISSIONS_CAP) {\n                        explanationArr.push(getFormattedOutput(each) + \" (DONE)\")\n                    }\n                }\n\n            });\n\n            /* Step 5: High chronic load scenarios */\n            // explanationArr.push(\"\\n\");\n            let scenario1 = false;\n            let scenario2 = false;\n            let scenario3 = false\n            if (timeObj.startTime == \"19:00\") {\n                shiftsCombined.forEach((each, eachIndex) => {\n                    /* Scenario 1: \n                    // If S3 has 6 admissions,\n                    // S4 has 6 admissions or\n                    // N5 has 3+ admissions */\n                    if ((each.name == \"S3\" && Number(each.numberOfAdmissions) == 6) ||\n                        (each.name == \"S4\" && Number(each.numberOfAdmissions) == 6) ||\n                        (each.name == \"N5\" && Number(each.numberOfAdmissions) >= 3 && each.name == \"N5\" && Number(each.numberOfAdmissions) <= 6)) {\n                        scenario1 = true;\n                        return;\n                        /* Scenario 2: If S4 has 5 admissions */\n                    } else if (each.name == \"S4\" && Number(each.numberOfAdmissions) == 5) {\n                        scenario1 = false;\n                        scenario2 = true;\n\n                        return;\n                        //If S3 has number of admissions of 5, then (N1-N4), N1>S3>N2>N3>N4 “Insert after N1 in Array2”\n                    }\n                    /*else if (each.name == \"S3\" && Number(each.numberOfAdmissions) == 5){\n                        explanationArr.push(`Step 5: If S3 has number of admissions of 5, then (N1-N4), N1>S3>N2>N3>N4`);\n                        scenario3 = true;\n                        return;\n                    }*/\n                });\n            }\n            if (scenario1) {\n                explanationArr.push(\"Step 5 (Scenario 1): 7PM High Chronic Load Scenario. If S3 or S4 has number of admission of 6 or N5 has number of admissions of 3+, then repeat (N1-N4)x2 and then insert at the end.\");\n\n                /* Step 1: Remove from Array 1. This means that we have to copy Array 1 to Array 2.*/\n                const array1 = [];\n                const array2 = [];\n\n                let s4HasFiveAdmissions = false;\n                let s4HasFiveAdmissions_obj = {};\n                shiftsCombined.forEach((innerEach, innerEachIndex) => {\n                    if (innerEach.name == \"S4\" && Number(innerEach.numberOfAdmissions) == 5\n                    ) {\n                        s4HasFiveAdmissions = true;\n                        s4HasFiveAdmissions_obj = innerEach;\n                    }\n                });\n\n                shiftsCombined.forEach((innerEach, innerEachIndex) => {\n                    if (dropdown == \"17:00\") {\n                        if ((innerEach.name == \"S2\" && Number(innerEach.numberOfAdmissions) == 6)) {\n\n                        } else {\n                            array2.push(innerEach);\n                        }\n                    } else if (dropdown == \"19:00\") {\n                        if ((innerEach.name == \"S2\" && Number(innerEach.numberOfAdmissions) == 6) ||\n                            Number(innerEach.numberOfAdmissions) > NUMBER_OF_ADMISSIONS_CAP) {\n\n                        } else {\n                            array2.push(innerEach);\n                        }\n                    }\n\n                });\n\n                if (s4HasFiveAdmissions) {\n                    let index = array2.findIndex(obj => obj.name === \"S4\");\n\n                    if (index !== -1) {\n                        let [removed] = array2.splice(index, 1);\n\n                        array2.splice(2, 0, removed);\n                    }\n                }\n\n                shiftsCombined.forEach((innerEach, innerEachIndex) => {\n                    if (dropdown == \"17:00\") {\n                        if ((innerEach.name == \"S3\" && Number(innerEach.numberOfAdmissions) == 6) ||\n                            (innerEach.name == \"S4\" && Number(innerEach.numberOfAdmissions) == 6) ||\n                            (innerEach.name == \"S4\" && Number(innerEach.numberOfAdmissions) == 5) ||\n                            (innerEach.name == \"N5\" && Number(innerEach.numberOfAdmissions) >= 3)) {\n                            explanationArr.push(getFormattedOutput(innerEach));\n                        } else {\n                            array1.push(innerEach);\n                        }\n                    } else if (dropdown == \"19:00\") {\n                        if ((innerEach.name == \"S3\" && Number(innerEach.numberOfAdmissions) == 6) ||\n                            (innerEach.name == \"S4\" && Number(innerEach.numberOfAdmissions) == 6) ||\n                            (innerEach.name == \"S4\" && Number(innerEach.numberOfAdmissions) == 5) ||\n                            (innerEach.name == \"N5\" && Number(innerEach.numberOfAdmissions) >= 3) ||\n                            Number(innerEach.numberOfAdmissions) > NUMBER_OF_ADMISSIONS_CAP) {\n                            explanationArr.push(getFormattedOutput(innerEach));\n                        } else {\n                            array1.push(innerEach);\n                        }\n                    }\n\n\n                })\n\n                /* Step 2: Create Array 2 but copying over from Array 1*/\n                shiftsCombined = array1.concat(array2);\n\n                setArray1(array1 && array1.map((each) => {\n                    if (window.location.hostname === 'localhost' && SHOW_ADMISSIONS_WITH_DETAILS) {\n                        return `${each.name}(${each.normalizedAlr},${each.normalizedClr},${each.composite})`;\n                    } else {\n                        return each.name\n\n                    }\n                }));\n                setArray2(array2 && array2.map((each) => {\n                    if (window.location.hostname === 'localhost' && SHOW_ADMISSIONS_WITH_DETAILS) {\n                        return `${each.name}(${each.normalizedAlr},${each.normalizedClr},${each.composite})`;\n\n                    } else {\n                        return each.name\n\n                    }\n                }));\n                const combinedArr = array1.concat(array2);\n                shiftsCombined = combinedArr;\n            } else if (scenario2) {\n                explanationArr.push(\"Step 5 (Scenario 2): 7PM High Chronic Load Scenario. If S4 has number of admissions of 5, then N1-N4, N1>N2>S4>N3>N4\");\n\n                /* If S4 has number of admissions of 5, then remove S4 from Array 1. This means that we have to copy Array 1 to Array 2. */\n                const array1 = [];\n                const array2 = [];\n                let getS4 = {};\n                shiftsCombined.forEach((innerEach, innerEachIndex) => {\n                    if (dropdown == \"17:00\") {\n                        if (innerEach.name == \"S4\") {\n                            explanationArr.push(getFormattedOutput(innerEach))\n                            getS4 = innerEach;\n                        } else if (innerEach.name == \"S2\" && Number(innerEach.numberOfAdmissions) == 6) {\n                            array1.push(innerEach);\n                        } else if (innerEach.name == \"S3\" && Number(innerEach.numberOfAdmissions) == 6) {\n                            array2.push(innerEach);\n                        } else {\n                            array1.push(innerEach);\n                            array2.push(innerEach);\n                        }\n                    } else if (dropdown == \"19:00\") {\n                        if (Number(innerEach.numberOfAdmissions) > NUMBER_OF_ADMISSIONS_CAP) {\n                        } else if (innerEach.name == \"S4\") {\n                            explanationArr.push(getFormattedOutput(innerEach))\n                            getS4 = innerEach;\n                        } else if (innerEach.name == \"S2\" && Number(innerEach.numberOfAdmissions) == 6) {\n                            array1.push(innerEach);\n                        } else if (innerEach.name == \"S3\" && Number(innerEach.numberOfAdmissions) == 6) {\n                            array2.push(innerEach);\n                        } else {\n                            array1.push(innerEach);\n                            array2.push(innerEach);\n                        }\n                    }\n\n\n                });\n\n                const newElement = getS4;\n\n                let index = 0;\n                for (let i = 0; i < array2.length; i++) {\n                    if (array2[i].name == \"N2\") {\n                        index = i;\n                    }\n                }\n\n                if (index !== -1) {\n                    // Insert the new element after the found element\n                    array2.splice(index + 1, 0, newElement);\n                }\n\n                // N5 is inserted after N4, if S4 qualifies then S4 inserted After N4, if S3 qualifies then S3 inserted after N4 \n\n                const combinedArr = array1.concat(array2);\n                shiftsCombined = combinedArr\n                setArray1(array1 && array1.map((each) => {\n                    if (window.location.hostname === 'localhost' && SHOW_ADMISSIONS_WITH_DETAILS) {\n                        return `${each.name}(${each.normalizedAlr},${each.normalizedClr},${each.composite})`;\n                    } else {\n                        return each.name\n\n                    }\n                }));\n                setArray2(array2 && array2.map((each) => {\n                    if (window.location.hostname === 'localhost' && SHOW_ADMISSIONS_WITH_DETAILS) {\n                        return `${each.name}(${each.normalizedAlr},${each.normalizedClr},${each.composite})`;\n\n                    } else {\n                        return each.name\n\n                    }\n                }));\n            } else if (scenario3) {\n                const array1 = [];\n                let getS3 = {};\n                shiftsCombined.forEach((innerEach, innerEachIndex) => {\n                    if (dropdown == \"17:00\") {\n                        if (innerEach.name == \"S3\") {\n                            getS3 = innerEach;\n                        } else {\n                            array1.push(innerEach);\n                        }\n                    } else if (dropdown == \"19:00\") {\n                        if (Number(innerEach.numberOfAdmissions) > NUMBER_OF_ADMISSIONS_CAP) {\n                        } else if (innerEach.name == \"S3\") {\n                            getS3 = innerEach;\n                        } else {\n                            array1.push(innerEach);\n                        }\n                    }\n\n                });\n                const array2 = [];\n                const copyArray2 = [...array1];\n                copyArray2.forEach((innerEach, innerEachIndex) => {\n                    if (dropdown == \"17:00\") {\n                        if ((innerEach.name == \"S2\" && Number(innerEach.numberOfAdmissions) == 6)) {\n                        } else {\n                            array2.push(innerEach);\n                        }\n                    } else if (dropdown == \"19:00\") {\n                        if ((innerEach.name == \"S2\" && Number(innerEach.numberOfAdmissions) == 6) ||\n                            Number(innerEach.numberOfAdmissions) > NUMBER_OF_ADMISSIONS_CAP) {\n                        } else {\n                            array2.push(innerEach);\n                        }\n                    }\n\n                })\n\n                const newElement = getS3;\n\n                let index = 0;\n                for (let i = 0; i < array2.length; i++) {\n                    if (array2[i].name == \"N1\") {\n                        index = i;\n                    }\n                }\n\n                if (index !== -1) {\n                    // Insert the new element after the found element\n                    array2.splice(index + 1, 0, newElement);\n                }\n                setArray1(array1 && array1.map((each) => {\n                    if (window.location.hostname === 'localhost' && SHOW_ADMISSIONS_WITH_DETAILS) {\n                        return `${each.name}(${each.normalizedAlr},${each.normalizedClr},${each.composite})`;\n                    } else {\n                        return each.name\n\n                    }\n                }));\n                setArray2(array2 && array2.map((each) => {\n                    if (window.location.hostname === 'localhost' && SHOW_ADMISSIONS_WITH_DETAILS) {\n                        return `${each.name}(${each.normalizedAlr},${each.normalizedClr},${each.composite})`;\n\n                    } else {\n                        return each.name\n\n                    }\n                }));\n                const combinedArr = array1.concat(array2);\n                shiftsCombined = combinedArr;\n            }\n            shiftsCombined.map((each, eachIndex) => {\n                if (SHOW_ROWS_COPY[dropdownSelected].includes(each.name)) {\n                    if (dropdown == \"17:00\") {\n                        if (window.location.hostname === 'localhost' && SHOW_ADMISSIONS_WITH_DETAILS) {\n                            orderOfAdmissions.push(`${each.name}(${each.chronicLoadRatio})`)\n                        } else {\n                            orderOfAdmissions.push(each.name);\n                        }\n                    } else if (dropdown == \"19:00\") {\n                        if (Number(each.numberOfAdmissions) <= NUMBER_OF_ADMISSIONS_CAP) {\n                            if (window.location.hostname === 'localhost' && SHOW_ADMISSIONS_WITH_DETAILS) {\n                                orderOfAdmissions.push(`${each.name}(${each.chronicLoadRatio})`)\n                            } else {\n                                orderOfAdmissions.push(each.name);\n\n                            }\n                        }\n                    }\n\n                }\n            })\n\n            setOrderOfAdmissions(orderOfAdmissions.join(\">\"));\n            setExplanation(explanationArr);\n\n            setSortRoles(timeObj, dropdownSelected, lastSavedTime);\n\n            setAllAdmissionsDataShifts(timeObj);\n            sortByAscendingName(timeObj);\n        }\n        return orderOfAdmissions.join(\">\");\n    }\n\n    const sortMain = (timeObj, dropdownSelected, lastSavedTime = \"\") => {\n        if (originalAlgorithm) {\n            return sortMainOriginal(timeObj, dropdownSelected, lastSavedTime);\n        }\n        return sortMainByCompositeScoreStatic(timeObj, dropdownSelected, lastSavedTime);\n    }\n    const sortMainByCompositeScoreStatic = (timeObj, dropdownSelected, lastSavedTime = \"\") => {\n        const orderOfAdmissions = [];\n        timeObj && timeObj.shifts && timeObj.shifts && timeObj.shifts.map((each, eachIndex) => {\n            if (SHOW_ROWS_COPY[dropdownSelected].includes(each.name)) {\n                return each;\n            } else {\n                each[\"timestamp\"] = \"\";\n                each[\"numberOfAdmissions\"] = \"\";\n            }\n            return each;\n        });\n\n        timeObj && timeObj.shifts && timeObj.shifts && timeObj.shifts.forEach((each, eachIndex) => {\n            each[\"startTime\"] = timeObj.startTime ? timeObj.startTime : \"\";\n            each[\"minutesWorkedFromStartTime\"] = getMinutesWorkedFromStartTime(each);\n            each[\"numberOfHoursWorked\"] = getNumberOfHoursWorked(each);\n            each[\"chronicLoadRatio\"] = getChronicLoadRatio(each);\n            each[\"numberOfAdmissions\"] = each.numberOfAdmissions ? each.numberOfAdmissions : \"\";\n            each[\"timestamp\"] = each.timestamp ? each.timestamp : \"\"\n            return each;\n        });\n\n        const explanationArr = [];\n        const differenceArr = [];\n        const alrArr = [];\n        const clrArr = [];\n        const compositeArr = [];\n        const normalizedAlrExplanation = [];\n        const normalizedClrExplanation = [];\n        const compositeArrExplanation = [];\n\n\n        const getAlrExplanation = (each, alrx) => {\n            if (SHOW_ROWS_TABLE[dropdownSelected].includes(each.name)) {\n                let p95 = \"\";\n                if (dropdownSelected == \"19:00\") {\n                    p95 = config.P95_7PM;\n                } else if (dropdownSelected == \"17:00\") {\n                    p95 = config.P95_5PM;\n                }\n\n                let fixedDiff = each.difference;\n                if (each.difference > p95) {\n                    fixedDiff = p95;\n                }\n                return `${each.name}: ${alrx}`;\n            }\n        }\n\n\n        const getClrExplanation = (each, clrx) => {\n            if (SHOW_ROWS_TABLE[dropdownSelected].includes(each.name)) {\n\n                const admissions = Number(each.numberOfAdmissions);\n                let clr = Number(clrx);\n\n                let str = \"\";\n                if (dropdownSelected == \"19:00\") {\n                    if (each.name == \"S2\") {\n                        str = `${each.name}: ${admissions} / 8 = ${clr.toFixed(3)}`;\n                    } else if (each.name == \"S3\") {\n                        str = `${each.name}: ${admissions} / 6 = ${clr.toFixed(3)}`;\n\n                    } else if (each.name == \"S4\") {\n                        str = `${each.name}: ${admissions} / 5 = ${clr.toFixed(3)}`;\n\n                    } else if (each.name == \"N5\") {\n                        str = `${each.name}: ${admissions} / 2 = ${clr.toFixed(3)}`;\n\n                    }\n                    return str;\n                } else if (dropdownSelected == \"17:00\") {\n                    if (each.name == \"S1\") {\n                        str = `${each.name}: ${admissions} / 7 = ${clr.toFixed(3)}`;\n\n                    } else if (each.name == \"S2\") {\n                        str = `${each.name}: ${admissions} / 6 = ${clr.toFixed(3)}`;\n\n                    } else if (each.name == \"S3\") {\n                        str = `${each.name}: ${admissions} / 4 = ${clr.toFixed(3)}`;\n\n                    } else if (each.name == \"S4\") {\n                        str = `${each.name}: ${admissions} / 3 = ${clr.toFixed(3)}`;\n\n                    }\n                    return str;\n                }\n            }\n        }\n\n\n        const getCompositeExplanation = (each, normalizedAlr, normalizedClr, isFinalExplanation) => {\n            const alr_f = dropdownSelected == \"17:00\" ? config.ALR_5PM : config.ALR_7PM;\n            const clr_f = dropdownSelected == \"17:00\" ? config.CLR_5PM : config.CLR_7PM;\n            let res = ((alr_f * Number(normalizedAlr)) + (clr_f * Number(normalizedClr))).toFixed(3);\n            if (dropdownSelected == \"17:00\") {\n                if (each.name == \"N5\") {\n                    res = config.CONSTANT_COMPOSITE_5PM_N5;\n                    return `${each.name}: ${config.CONSTANT_COMPOSITE_5PM_N5}`;\n                }\n            }\n            else if (dropdownSelected == \"19:00\") {\n                if (each.name == \"N1\") {\n                    res = config.CONSTANT_COMPOSITE_7PM_N1;\n                    return `${each.name}: ${config.CONSTANT_COMPOSITE_7PM_N1}`;\n                } else if (each.name == \"N2\") {\n                    res = config.CONSTANT_COMPOSITE_7PM_N2;\n                    return `${each.name}: ${config.CONSTANT_COMPOSITE_7PM_N2}`;\n                } else if (each.name == \"N3\") {\n                    res = config.CONSTANT_COMPOSITE_7PM_N3;\n                    return `${each.name}: ${config.CONSTANT_COMPOSITE_7PM_N3}`;\n                } else if (each.name == \"N4\") {\n                    res = config.CONSTANT_COMPOSITE_7PM_N4;\n                    return `${each.name}: ${config.CONSTANT_COMPOSITE_7PM_N4}`;\n                }\n            }\n\n            if (isFinalExplanation) {\n                return `${each.name}: ${res}`;\n\n            } else {\n                if (SHOW_ROWS_TABLE[dropdownSelected].includes(each.name)) {\n                    return `${each.name}: (${alr_f} * ${normalizedAlr}) + (${clr_f} * ${normalizedClr}) = ${res}`;\n\n                }\n\n            }\n\n        }\n\n\n        const getNormalizedAlrExplanation = (each) => {\n            if (SHOW_ROWS_TABLE[dropdownSelected].includes(each.name)) {\n                let p95_alr = \"\";\n                if (dropdownSelected == \"17:00\") {\n                    p95_alr = 1.00;\n                } else if (dropdownSelected == \"19:00\") {\n                    p95_alr = 1.00;\n                }\n\n                return `${each.name}: ${each.alr} / ${p95_alr} = ${each.normalizedAlr}`\n            }\n        }\n        const getNormalizedClrExplanation = (each) => {\n            if (SHOW_ROWS_TABLE[dropdownSelected].includes(each.name)) {\n                let p95_clr = \"\";\n                if (dropdownSelected == \"17:00\") {\n                    p95_clr = 1.00;\n                } else if (dropdownSelected == \"19:00\") {\n                    p95_clr = 1.00;\n                }\n\n                return `${each.name}: ${each.clr} / ${p95_clr} = ${each.normalizedClr}`\n            }\n        }\n\n        explanationArr.push(\"Step 1: Calculate Acute Load for each Role.\");\n\n        const getAlrx = (each, difference) => {\n            if (dropdownSelected == \"19:00\" && each.name == \"N5\" && Number(each.numberOfAdmissions) == 0) {\n                return 0;\n            }\n            let p95 = \"\";\n            if (dropdownSelected == \"19:00\") {\n                p95 = config.P95_7PM;\n            } else if (dropdownSelected == \"17:00\") {\n                p95 = config.P95_5PM;\n            }\n\n            let fixedDiff = difference;\n            if (difference > p95) {\n                fixedDiff = p95;\n            }\n            let increaseAlr = 0;\n            if (!window.Cypress && dropdownSelected == \"19:00\") {\n                if (each.name == \"N5\" && each.numberOfAdmissions > 1) {\n                    increaseAlr = Number(each.numberOfAdmissions) - 1;\n                } else {\n                    lastSaved5Pm && lastSaved5Pm.shifts && lastSaved5Pm.shifts.forEach((fivePm, eachIndex) => {\n                        if (each.name == fivePm.name) {\n                            if (fivePm.numberOfAdmissions !== \"\" && (Number(fivePm.numberOfAdmissions)) + 2 <= Number(each.numberOfAdmissions)) {\n                                increaseAlr = Number(each.numberOfAdmissions) - Number(fivePm.numberOfAdmissions) - 1;\n                            }\n                        }\n                    })\n                }\n\n            }\n\n            const originalAlr = Number(1 - (fixedDiff) / p95);\n            const updatedAlr = originalAlr + increaseAlr;\n            return updatedAlr.toFixed(3);\n        }\n        const getClrx = (each) => {\n            if (dropdownSelected == \"19:00\" && each.name == \"N5\" && Number(each.numberOfAdmissions) == 0) {\n                return 0;\n            }\n            const admissions = Number(each.numberOfAdmissions);\n            let clr = 0;\n\n            if (dropdownSelected == \"19:00\") {\n                if (each.name == \"S2\") {\n                    clr = Number(admissions) / 8;\n                } else if (each.name == \"S3\") {\n                    clr = Number(admissions) / 6;\n                } else if (each.name == \"S4\") {\n                    clr = Number(admissions) / 5;\n                } else if (each.name == \"N5\") {\n                    clr = Number(admissions) / 2;\n                }\n                return clr.toFixed(3);\n            } else if (dropdownSelected == \"17:00\") {\n                if (each.name == \"S1\") {\n                    clr = Number(admissions) / 7;\n                } else if (each.name == \"S2\") {\n                    clr = Number(admissions) / 6;\n                } else if (each.name == \"S3\") {\n                    clr = Number(admissions) / 4;\n                } else if (each.name == \"S4\") {\n                    clr = Number(admissions) / 3;\n                }\n                return clr.toFixed(3);\n            }\n        }\n        const getCompositex = (each, normalizedAlr, normalizedClr) => {\n            const alr_f = dropdownSelected == \"17:00\" ? config.ALR_5PM : config.ALR_7PM;\n            const clr_f = dropdownSelected == \"17:00\" ? config.CLR_5PM : config.CLR_7PM;\n\n            let res = ((alr_f * Number(normalizedAlr)) + (clr_f * Number(normalizedClr))).toFixed(3);\n            if (dropdownSelected == \"17:00\") {\n                if (each.name == \"N5\") {\n                    res = config.CONSTANT_COMPOSITE_5PM_N5;\n                    return config.CONSTANT_COMPOSITE_5PM_N5;\n                }\n            }\n\n            else if (dropdownSelected == \"19:00\") {\n                if (each.name == \"N1\") {\n                    res = config.CONSTANT_COMPOSITE_7PM_N1;\n                    return config.CONSTANT_COMPOSITE_7PM_N1;\n                } else if (each.name == \"N2\") {\n                    res = config.CONSTANT_COMPOSITE_7PM_N2;\n                    return config.CONSTANT_COMPOSITE_7PM_N2;\n                } else if (each.name == \"N3\") {\n                    res = config.CONSTANT_COMPOSITE_7PM_N3;\n                    return config.CONSTANT_COMPOSITE_7PM_N3;\n                } else if (each.name == \"N4\") {\n                    res = config.CONSTANT_COMPOSITE_7PM_N4;\n                    return config.CONSTANT_COMPOSITE_7PM_N4;\n                }\n            }\n            return Number(res).toFixed(3);\n        }\n\n        const getNormalizedAlrx = (each, alrx) => {\n            let p95_alr = \"\";\n            if (dropdownSelected == \"17:00\") {\n                p95_alr = 1.00;\n            } else if (dropdownSelected == \"19:00\") {\n                p95_alr = 1.00;\n            }\n\n            const normalizedAlr = Number(alrx) / p95_alr;\n            return Number(normalizedAlr).toFixed(3);\n        }\n        const getNormalizedClrx = (each, clrx) => {\n            let p95_clr = \"\";\n            if (dropdownSelected == \"17:00\") {\n                p95_clr = 1.00;\n            } else if (dropdownSelected == \"19:00\") {\n                p95_clr = 1.00;\n            }\n\n            const normalizedAlr = clrx / p95_clr;\n            return Number(normalizedAlr).toFixed(3);\n        }\n        const getTimeDifferencex = (time1) => {\n\n            if (time1) {\n                const time2 = dropdownSelected;\n                // Convert times to minutes\n                const [hours1, minutes1] = time1.split(':').map(Number);\n                const [hours2, minutes2] = time2.split(':').map(Number);\n\n                const totalMinutes1 = hours1 * 60 + minutes1;\n                const totalMinutes2 = hours2 * 60 + minutes2;\n\n                // Calculate difference in minutes\n                let diffMinutes = totalMinutes2 - totalMinutes1;\n\n                return diffMinutes;\n\n            } else {\n                return 0;\n            }\n\n        }\n\n        timeObj.shifts.forEach((each, eachIndex) => {\n            if (SHOW_ROWS_COPY[dropdownSelected].includes(each.name)) {\n                const difference = getTimeDifferencex(each.timestamp);\n                const alrx = getAlrx(each, difference);\n                const clrx = getClrx(each)\n                const normalizedAlr = getNormalizedAlrx(each, alrx);\n                const normalizedClr = getNormalizedClrx(each, clrx);\n                const composite = getCompositex(each, normalizedAlr, normalizedClr);\n\n                each[\"difference\"] = difference;\n                each[\"alr\"] = alrx;\n                each[\"clr\"] = clrx;\n                each[\"composite\"] = composite;\n                each[\"normalizedAlr\"] = normalizedAlr;\n                each[\"normalizedClr\"] = normalizedClr;\n\n                compositeArrExplanation.push(getCompositeExplanation(each, normalizedAlr, normalizedClr));\n                alrArr.push(getAlrExplanation(each, alrx));\n                clrArr.push(getClrExplanation(each, clrx));\n                normalizedAlrExplanation.push(getNormalizedAlrExplanation(each));\n                normalizedClrExplanation.push(getNormalizedClrExplanation(each));\n            }\n        });\n\n        /*\n        Step 1: Time Difference\n        */\n        timeObj.shifts.sort((a, b) => {\n            if (a.difference > b.difference) {\n                return 1;\n            }\n            if (a.difference < b.difference) {\n                return -1;\n            }\n            return 0;\n        });\n\n        timeObj.shifts.sort((a, b) => {\n            if (a.composite < b.composite) {\n                return -1;\n            }\n            if (b.composite > b.composite) {\n                return 1;\n            }\n            return 0;\n        });\n\n        // explanationArr.push(`ALR = 1 - (Minutes Before The Hour/ P95)`);\n\n        alrArr.map((each, eachIndex) => {\n            explanationArr.push(each);\n        });\n\n        explanationArr.push(\"\\n\")\n        explanationArr.push(`Step 2: Calculate Chronic Load for each Role.`);\n        explanationArr.push(\"CLR = Number of Admits / Hours Worked So Far\")\n\n\n        clrArr.map((each, eachIndex) => {\n            explanationArr.push(each);\n        });\n\n        // explanationArr.push(\"\\n\")\n        // explanationArr.push(`Step 3: Calculate Normalized ALR.`);\n\n        // normalizedAlrExplanation.map((each, eachIndex) => {\n        //     explanationArr.push(each);\n        // });\n\n        // explanationArr.push(\"\\n\")\n        // explanationArr.push(`Step 4: Calculate Normalized CLR.`);\n\n        // normalizedClrExplanation.map((each, eachIndex) => {\n        //     explanationArr.push(each);\n        // });\n\n        explanationArr.push(\"\\n\")\n        explanationArr.push(`Step 3: Calculate Composite Score.`);\n\n        compositeArrExplanation.forEach((each, eachIndex) => {\n            // explanationArr.push(each);\n        })\n\n        timeObj.shifts.sort((a, b) => {\n            if (Number(a.composite) > Number(b.composite)) {\n                return 1;\n            }\n            if (Number(a.composite) < Number(b.composite)) {\n                return -1;\n            }\n            return 0;\n        });\n\n        explanationArr.push(\"\\n\")\n        explanationArr.push(\"Step 4: Generate the Order, with Roles having the Lowest Composite Score Prioritized First.\");\n\n        timeObj.shifts.forEach((each, eachIndex) => {\n            if (SHOW_ROWS_TABLE[dropdownSelected].includes(each.name)) {\n                explanationArr.push(`${each.name}: ${each.composite}`)\n            }\n        });\n\n        const lessThan2Hours = [];\n        const greaterThan2Hours = [];\n\n        let hasAnyGreaterThan2Hours = false;\n\n        timeObj.shifts.forEach((each, eachIndex) => {\n            if (SHOW_ROWS_COPY[dropdownSelected].includes(each.name)) {\n                if ((dropdownSelected == \"19:00\" && !window.Cypress && isXIn2Hours(each)) || (dropdownSelected == \"19:00\" && (each.chronicLoadRatio > CHRONIC_LOAD_RATIO_THRESHOLD_S4))) {\n                    greaterThan2Hours.push(each);\n                    hasAnyGreaterThan2Hours = true;\n                } else {\n                    lessThan2Hours.push(each);\n                }\n            }\n        });\n        greaterThan2Hours.sort((a, b) => {\n            if (a.composite > b.composite) {\n                return 1;\n            } else if (a.composite < b.composite) {\n                return -1;\n            }\n            return 0;\n        });\n\n\n        // if (hasAnyGreaterThan2Hours) {\n        //     explanationArr.push(\"\\n\")\n        //     explanationArr.push(\"Step 7: Check if any roles have had 2 or more admissions in the last 2 hours. Then sort by composite score.\");\n        //     greaterThan2Hours && greaterThan2Hours.forEach((each) => {\n        //         explanationArr.push(`${each.name}: had ${getXIn2Hours(each)} admissions in the last 2 hours /  Composite Score: ${each.composite}`);\n        //     })\n        // }\n\n\n        let shiftsCombined = lessThan2Hours.concat(greaterThan2Hours);\n\n\n        let scenario1 = false;\n        let scenario2 = false;\n        let scenario3 = false\n        if (timeObj.startTime == \"19:00\") {\n            shiftsCombined.forEach((each, eachIndex) => {\n                /* Scenario 1: \n                // If S3 has 6 admissions,\n                // S4 has 6 admissions or\n                // N5 has 3+ admissions */\n                if ((each.name == \"S3\" && Number(each.numberOfAdmissions) == 6) ||\n                    (each.name == \"S4\" && Number(each.numberOfAdmissions) == 6) ||\n                    (each.name == \"N5\" && Number(each.numberOfAdmissions) >= 3 && each.name == \"N5\" && Number(each.numberOfAdmissions) <= 6)) {\n                    scenario1 = true;\n                    return;\n                    /* Scenario 2: If S4 has 5 admissions */\n                } else if (each.name == \"S4\" && Number(each.numberOfAdmissions) == 5) {\n                    scenario1 = false;\n                    scenario2 = true;\n\n                    return;\n                    //If S3 has number of admissions of 5, then (N1-N4), N1>S3>N2>N3>N4 “Insert after N1 in Array2”\n                }\n                /*else if (each.name == \"S3\" && Number(each.numberOfAdmissions) == 5){\n                    explanationArr.push(`Step 5: If S3 has number of admissions of 5, then (N1-N4), N1>S3>N2>N3>N4`);\n                    scenario3 = true;\n                    return;\n                }*/\n            });\n        }\n        if (scenario1) {\n            // explanationArr.push(\"\\n\");\n            // explanationArr.push(\"7PM High Chronic Load Scenario. If S3 or S4 has number of admission of 6 or N5 has number of admissions of 3+, then repeat (N1-N4)x2 and then insert at the end.\");\n\n            /* Step 1: Remove from Array 1. This means that we have to copy Array 1 to Array 2.*/\n            const array1 = [];\n            const array2 = [];\n\n            let s4HasFiveAdmissions = false;\n            let s4HasFiveAdmissions_obj = {};\n            shiftsCombined.forEach((innerEach, innerEachIndex) => {\n                if (innerEach.name == \"S4\" && Number(innerEach.numberOfAdmissions) == 5\n                ) {\n                    s4HasFiveAdmissions = true;\n                    s4HasFiveAdmissions_obj = innerEach;\n                }\n            });\n\n            shiftsCombined.forEach((innerEach, innerEachIndex) => {\n                if (dropdownSelected == \"17:00\") {\n                    if ((innerEach.name == \"S2\" && Number(innerEach.numberOfAdmissions) == 6)) {\n\n                    } else {\n                        array2.push(innerEach);\n                    }\n                } else if (dropdownSelected == \"19:00\") {\n                    if ((innerEach.name == \"S2\" && Number(innerEach.numberOfAdmissions) == 6) ||\n                        Number(innerEach.numberOfAdmissions) > NUMBER_OF_ADMISSIONS_CAP) {\n\n                    } else {\n                        array2.push(innerEach);\n                    }\n                }\n\n            });\n\n            if (s4HasFiveAdmissions) {\n                let index = array2.findIndex(obj => obj.name === \"S4\");\n\n                if (index !== -1) {\n                    let [removed] = array2.splice(index, 1);\n\n                    array2.splice(2, 0, removed);\n                }\n            }\n\n            shiftsCombined.forEach((innerEach, innerEachIndex) => {\n                if (dropdownSelected == \"17:00\") {\n                    if ((innerEach.name == \"S3\" && Number(innerEach.numberOfAdmissions) == 6) ||\n                        (innerEach.name == \"S4\" && Number(innerEach.numberOfAdmissions) == 6) ||\n                        (innerEach.name == \"S4\" && Number(innerEach.numberOfAdmissions) == 5) ||\n                        (innerEach.name == \"N5\" && Number(innerEach.numberOfAdmissions) >= 3)) {\n                        // explanationArr.push(getFormattedOutputCompositeScore2(innerEach));\n                    } else {\n                        array1.push(innerEach);\n                    }\n                } else if (dropdownSelected == \"19:00\") {\n                    if ((innerEach.name == \"S3\" && Number(innerEach.numberOfAdmissions) == 6) ||\n                        (innerEach.name == \"S4\" && Number(innerEach.numberOfAdmissions) == 6) ||\n                        (innerEach.name == \"S4\" && Number(innerEach.numberOfAdmissions) == 5) ||\n                        (innerEach.name == \"N5\" && Number(innerEach.numberOfAdmissions) >= 3) ||\n                        (is3In2Hours(innerEach)) ||\n                        Number(innerEach.numberOfAdmissions) > NUMBER_OF_ADMISSIONS_CAP) {\n                        // explanationArr.push(getFormattedOutputCompositeScore2(innerEach));\n                    } else {\n                        array1.push(innerEach);\n                    }\n                }\n\n            })\n\n            /* Step 2: Create Array 2 but copying over from Array 1*/\n            // shiftsCombined = array1.concat(array2);\n\n            setArray1(array1 && array1.map((each) => {\n                if (window.location.hostname === 'localhost' && SHOW_ADMISSIONS_WITH_DETAILS) {\n                    return each.name\n                    // return `${each.name}(${each.normalizedAlr},${each.normalizedClr},${each.composite})`;\n                } else {\n                    return each.name\n\n                }\n            }));\n            setArray2(array2 && array2.map((each) => {\n                if (window.location.hostname === 'localhost' && SHOW_ADMISSIONS_WITH_DETAILS) {\n                    // return `${each.name}(${each.normalizedAlr},${each.normalizedClr},${each.composite})`;\n                    return each.name\n                } else {\n                    return each.name\n\n                }\n            }));\n            const combinedArr = array1.concat(array2);\n            shiftsCombined = combinedArr;\n        } else if (scenario2) {\n            // explanationArr.push(\"\\n\");\n            // explanationArr.push(\"7PM High Chronic Load Scenario. If S4 has number of admissions of 5, then N1-N4, N1>N2>S4>N3>N4\");\n\n            /* If S4 has number of admissions of 5, then remove S4 from Array 1. This means that we have to copy Array 1 to Array 2. */\n            const array1 = [];\n            const array2 = [];\n            let getS4 = {};\n            shiftsCombined.forEach((innerEach, innerEachIndex) => {\n                if (dropdownSelected == \"17:00\") {\n                    if (innerEach.name == \"S4\") {\n                        // explanationArr.push(getFormattedOutputCompositeScore2(innerEach))\n                        getS4 = innerEach;\n                    } else if (innerEach.name == \"S2\" && Number(innerEach.numberOfAdmissions) == 6) {\n                        array1.push(innerEach);\n                    } else if (innerEach.name == \"S3\" && Number(innerEach.numberOfAdmissions) == 6) {\n                        array2.push(innerEach);\n                    } else {\n                        array1.push(innerEach);\n                        array2.push(innerEach);\n                    }\n                } else if (dropdownSelected == \"19:00\") {\n                    if (Number(innerEach.numberOfAdmissions) > NUMBER_OF_ADMISSIONS_CAP) {\n                    } else if (innerEach.name == \"S4\") {\n                        // explanationArr.push(getFormattedOutputCompositeScore2(innerEach))\n                        getS4 = innerEach;\n                    } else if (innerEach.name == \"S2\" && Number(innerEach.numberOfAdmissions) == 6) {\n                        array1.push(innerEach);\n                    } else if (innerEach.name == \"S3\" && Number(innerEach.numberOfAdmissions) == 6) {\n                        array2.push(innerEach);\n                    } else {\n                        array1.push(innerEach);\n                        array2.push(innerEach);\n                    }\n                }\n\n            });\n\n            const newElement = getS4;\n\n            let index = 0;\n            for (let i = 0; i < array2.length; i++) {\n                if (array2[i].name == \"N2\") {\n                    index = i;\n                }\n            }\n\n            if (index !== -1) {\n                // Insert the new element after the found element\n                array2.splice(index + 1, 0, newElement);\n            }\n\n            // N5 is inserted after N4, if S4 qualifies then S4 inserted After N4, if S3 qualifies then S3 inserted after N4 \n\n            const combinedArr = array1.concat(array2);\n            shiftsCombined = combinedArr\n            setArray1(array1 && array1.map((each) => {\n                if (window.location.hostname === 'localhost' && SHOW_ADMISSIONS_WITH_DETAILS) {\n                    return each.name;\n                    // return `${each.name}(${each.normalizedAlr},${each.normalizedClr},${each.composite})`;\n                } else {\n                    return each.name\n\n                }\n            }));\n            setArray2(array2 && array2.map((each) => {\n                if (window.location.hostname === 'localhost' && SHOW_ADMISSIONS_WITH_DETAILS) {\n                    return each.name;\n                    // return `${each.name}(${each.normalizedAlr},${each.normalizedClr},${each.composite})`;\n\n                } else {\n                    return each.name;\n\n                }\n            }));\n        } else if (scenario3) {\n            // explanationArr.push(\"\\n\");\n            const array1 = [];\n            let getS3 = {};\n            shiftsCombined.forEach((innerEach, innerEachIndex) => {\n                if (dropdownSelected == \"17:00\") {\n                    if (innerEach.name == \"S3\") {\n                        getS3 = innerEach;\n                    } else {\n                        array1.push(innerEach);\n                    }\n                } else if (dropdownSelected == \"19:00\") {\n                    if (Number(innerEach.numberOfAdmissions) > NUMBER_OF_ADMISSIONS_CAP) {\n                    } else if (innerEach.name == \"S3\") {\n                        getS3 = innerEach;\n                    } else {\n                        array1.push(innerEach);\n                    }\n                }\n\n            });\n            const array2 = [];\n            const copyArray2 = [...array1];\n            copyArray2.forEach((innerEach, innerEachIndex) => {\n                if (dropdownSelected == \"17:00\") {\n                    if ((innerEach.name == \"S2\" && Number(innerEach.numberOfAdmissions) == 6)) {\n                    } else {\n                        array2.push(innerEach);\n                    }\n                } else if (dropdownSelected == \"19:00\") {\n                    if ((innerEach.name == \"S2\" && Number(innerEach.numberOfAdmissions) == 6) ||\n                        Number(innerEach.numberOfAdmissions) > NUMBER_OF_ADMISSIONS_CAP) {\n                    } else {\n                        array2.push(innerEach);\n                    }\n                }\n\n            })\n\n            const newElement = getS3;\n\n            let index = 0;\n            for (let i = 0; i < array2.length; i++) {\n                if (array2[i].name == \"N1\") {\n                    index = i;\n                }\n            }\n\n            if (index !== -1) {\n                // Insert the new element after the found element\n                array2.splice(index + 1, 0, newElement);\n            }\n            setArray1(array1 && array1.map((each) => {\n                if (window.location.hostname === 'localhost' && SHOW_ADMISSIONS_WITH_DETAILS) {\n                    return each.name;\n                    // return `${each.name}(${each.normalizedAlr},${each.normalizedClr},${each.composite})`;\n                } else {\n                    return each.name;\n\n                }\n            }));\n            setArray2(array2 && array2.map((each) => {\n                if (window.location.hostname === 'localhost' && SHOW_ADMISSIONS_WITH_DETAILS) {\n                    return each.name\n                    // return `${each.name}(${each.normalizedAlr},${each.normalizedClr},${each.composite})`;\n\n                } else {\n                    return each.name;\n\n                }\n            }));\n            const combinedArr = array1.concat(array2);\n            shiftsCombined = combinedArr;\n        }\n        shiftsCombined.map((each, eachIndex) => {\n            if (SHOW_ROWS_COPY[dropdownSelected].includes(each.name)) {\n                if (dropdownSelected == \"17:00\") {\n                    if (window.location.hostname === 'localhost' && SHOW_ADMISSIONS_WITH_DETAILS) {\n                        orderOfAdmissions.push(each.name);\n                        // orderOfAdmissions.push(`${each.name}(${each.normalizedAlr},${each.normalizedClr},${each.composite})`)\n                    } else {\n                        orderOfAdmissions.push(each.name);\n\n                    }\n                } else if (dropdownSelected == \"19:00\") {\n                    if (Number(each.numberOfAdmissions) <= NUMBER_OF_ADMISSIONS_CAP) {\n                        if (window.location.hostname === 'localhost' && SHOW_ADMISSIONS_WITH_DETAILS) {\n                            orderOfAdmissions.push(each.name);\n                            // orderOfAdmissions.push(`${each.name}(${each.normalizedAlr},${each.normalizedClr},${each.composite})`)\n\n                        } else {\n                            orderOfAdmissions.push(each.name);\n\n                        }\n\n                    }\n                }\n\n            }\n        });\n        if (shiftsCombined && shiftsCombined.length == 0) {\n            shiftsCombined = timeObj.shifts;\n        }\n\n        setOrderOfAdmissions(orderOfAdmissions.join(\">\"));\n        setExplanation(explanationArr);\n\n        setSortRoles(timeObj, dropdownSelected, lastSavedTime);\n\n        setAllAdmissionsDataShifts(timeObj);\n        sortByAscendingName(timeObj);\n\n        return orderOfAdmissions.join(\">\");\n    }\n\n    const getFormattedOutput = (each) => {\n        return `${each.name} [ ${each.timestamp ? moment(each.timestamp, TIME_FORMAT).format(TIME_FORMAT) : \"--:-- --\"} ] (${each.numberOfAdmissions ? each.numberOfAdmissions : \" \"}/${each.numberOfHoursWorked})=${each.chronicLoadRatio}`;\n    }\n\n    const getMomentTimeWithoutUndefined = (time) => {\n        return time ? moment(time, TIME_FORMAT).format(TIME_FORMAT) : \"--:-- --\"\n    }\n\n    const convertTo12HourFormatSimple = (time24) => {\n        const [hours] = time24 && time24.split(':').map(Number);\n        const period = hours >= 12 ? 'PM' : 'AM';\n        const hours12 = hours % 12 || 12;\n        return `${hours12}:00${period}`;\n    }\n\n    const onChange = (e, admissionsId) => {\n        if (dropdown == \"17:00\") {\n            setClickedGenerateQueue(false);\n        }\n        const { name, value } = e.target\n\n        const newObj = {};\n\n        const updatedShifts = allAdmissionsDataShifts && allAdmissionsDataShifts.shifts && allAdmissionsDataShifts.shifts.map((item) =>\n            item.admissionsId === admissionsId && name ? { ...item, [name]: value } : item\n        )\n\n        updatedShifts.map((each, eachIndex) => {\n            const timeDiff = getTimeDifference(each.timestamp);;\n\n            each[\"startTime\"] = dropdown;\n            each[\"minutesWorkedFromStartTime\"] = getMinutesWorkedFromStartTime(each);\n            each[\"numberOfHoursWorked\"] = getNumberOfHoursWorked(each);\n            each[\"chronicLoadRatio\"] = getChronicLoadRatio(each);\n            each[\"difference\"] = timeDiff;\n            each[\"alr\"] = getAlr(each, each.difference);\n            each[\"clr\"] = getClr(each);\n            each[\"normalizedAlr\"] = getNormalizedAlr(each, each.alr);\n            each[\"normalizedClr\"] = getNormalizedClr(each, each.clr)\n            each[\"composite\"] = getComposite(each, each.normalizedAlr, each.normalizedClr);\n            return each;\n        });\n\n        newObj[\"startTime\"] = dropdown;\n        newObj[\"shifts\"] = updatedShifts ? updatedShifts : [];\n\n        setAllAdmissionsDataShifts(newObj);\n    }\n\n    const getChronicLoadRatio = (admission) => {\n        const timeDifference = admission.numberOfHoursWorked;\n        const chronicLoadRatio = (Number(admission.numberOfAdmissions) / (Number(timeDifference))).toFixed(2);\n\n        if (chronicLoadRatio == \"NaN\" || chronicLoadRatio == \"Infinity\") {\n            return \"0.00\";\n        } else {\n            return chronicLoadRatio ? chronicLoadRatio : \"\";\n\n        }\n\n    }\n\n    const getTimeDifference = (time1) => {\n\n        if (time1) {\n            const time2 = dropdown;\n            // Convert times to minutes\n            const [hours1, minutes1] = time1.split(':').map(Number);\n            const [hours2, minutes2] = time2.split(':').map(Number);\n\n            const totalMinutes1 = hours1 * 60 + minutes1;\n            const totalMinutes2 = hours2 * 60 + minutes2;\n\n            // Calculate difference in minutes\n            let diffMinutes = totalMinutes2 - totalMinutes1;\n\n            return diffMinutes;\n\n        } else {\n            return 0;\n        }\n\n    }\n\n    const getAlr = (each, difference) => {\n        let p95 = \"\";\n        if (dropdown == \"19:00\") {\n            p95 = config.P95_7PM;\n        } else if (dropdown == \"17:00\") {\n            p95 = config.P95_5PM;\n        }\n\n        let fixedDiff = difference;\n        if (difference > p95) {\n            fixedDiff = p95;\n        }\n        let increaseAlr = 0;\n        if (!window.Cypress && dropdown == \"19:00\") {\n            if (each.name == \"N5\" && each.numberOfAdmissions > 1) {\n                increaseAlr = Number(each.numberOfAdmissions) - 1;\n            } else {\n                lastSaved5Pm && lastSaved5Pm.shifts && lastSaved5Pm.shifts.forEach((fivePm, eachIndex) => {\n                    if (each.name == fivePm.name) {\n                        if (fivePm.numberOfAdmissions !== \"\" && (Number(fivePm.numberOfAdmissions)) + 2 <= Number(each.numberOfAdmissions)) {\n                            increaseAlr = Number(each.numberOfAdmissions) - Number(fivePm.numberOfAdmissions) - 1;\n                        }\n                    }\n                })\n            }\n\n        }\n\n        const originalAlr = Number(1 - (fixedDiff) / p95);\n        const updatedAlr = originalAlr + increaseAlr;\n        return updatedAlr.toFixed(3);\n    }\n    const getClr = (each) => {\n        const admissions = Number(each.numberOfAdmissions);\n        let clr = 0;\n\n        if (dropdown == \"19:00\") {\n            if (each.name == \"S2\") {\n                clr = Number(admissions) / 8;\n            } else if (each.name == \"S3\") {\n                clr = Number(admissions) / 6;\n            } else if (each.name == \"S4\") {\n                clr = Number(admissions) / 5;\n            } else if (each.name == \"N5\") {\n                clr = Number(admissions) / 2;\n            }\n            return clr.toFixed(3);\n        } else if (dropdown == \"17:00\") {\n            if (each.name == \"S1\") {\n                clr = Number(admissions) / 7;\n            } else if (each.name == \"S2\") {\n                clr = Number(admissions) / 6;\n            } else if (each.name == \"S3\") {\n                clr = Number(admissions) / 4;\n            } else if (each.name == \"S4\") {\n                clr = Number(admissions) / 3;\n            }\n            return clr.toFixed(3);\n        }\n    }\n\n    const getComposite = (each, normalizedAlr, normalizedClr, dropdownSelected) => {\n        const alr_f = dropdownSelected == \"17:00\" ? config.ALR_5PM : config.ALR_7PM;\n        const clr_f = dropdownSelected == \"17:00\" ? config.CLR_5PM : config.CLR_7PM;\n\n        let res = ((alr_f * Number(normalizedAlr)) + (clr_f * Number(normalizedClr))).toFixed(3);\n        if (dropdown == \"17:00\") {\n            if (each.name == \"N5\") {\n                res = config.CONSTANT_COMPOSITE_5PM_N5;\n                return config.CONSTANT_COMPOSITE_5PM_N5;\n            }\n        }\n\n        else if (dropdown == \"19:00\") {\n            if (each.name == \"N1\") {\n                res = config.CONSTANT_COMPOSITE_7PM_N1;\n                return config.CONSTANT_COMPOSITE_7PM_N1;\n            } else if (each.name == \"N2\") {\n                res = config.CONSTANT_COMPOSITE_7PM_N2;\n                return config.CONSTANT_COMPOSITE_7PM_N2;\n            } else if (each.name == \"N3\") {\n                res = config.CONSTANT_COMPOSITE_7PM_N3;\n                return config.CONSTANT_COMPOSITE_7PM_N3;\n            } else if (each.name == \"N4\") {\n                res = config.CONSTANT_COMPOSITE_7PM_N4;\n                return config.CONSTANT_COMPOSITE_7PM_N4;\n            }\n        }\n        return Number(res).toFixed(3);\n    }\n\n    const getNormalizedAlr = (each, alrx) => {\n        let p95_alr = \"\";\n        if (dropdown == \"17:00\") {\n            p95_alr = 1.00;\n        } else if (dropdown == \"19:00\") {\n            p95_alr = 1.00;\n        }\n\n        const normalizedAlr = Number(alrx) / p95_alr;\n        return Number(normalizedAlr).toFixed(3);\n    }\n    const getNormalizedClr = (each, clrx) => {\n        let p95_clr = \"\";\n        if (dropdown == \"17:00\") {\n            p95_clr = 1.00;\n        } else if (dropdown == \"19:00\") {\n            p95_clr = 1.00;\n        }\n\n        const normalizedAlr = clrx / p95_clr;\n        return Number(normalizedAlr).toFixed(3);\n    }\n\n\n    const getNumberOfHoursWorked = (admission) => {\n        let startTime = \"\";\n        SHIFT_TYPES.forEach((shift, shiftIndex) => {\n            if (shift.name === admission.name) {\n                startTime = shift.start;\n            }\n        });\n\n        const now = admission.startTime;\n        const timeDifference = moment(now, TIME_FORMAT).diff(moment(startTime, TIME_FORMAT), \"hours\", true).toFixed();\n        return timeDifference ? timeDifference : \"\";\n\n    }\n\n    const getMinutesWorkedFromStartTime = (admission) => {\n        const now = getMomentTimeWithoutUndefined(admission.startTime);\n        const timeDifference = moment(now, TIME_FORMAT).diff(moment(admission.timestamp, TIME_FORMAT), \"minutes\", true).toFixed();\n        return timeDifference ? timeDifference : \"\";\n    }\n\n    const timesDropdown = () => {\n        return (\n            <select\n                value={dropdown}\n                name=\"timesdropdown\"\n                className={isMobileDevice() ? \"timesdropdownwithoutsnapshot\" : \"timesdropdown\"}\n                id=\"timesdropdown\"\n                onChange={e => {\n                    const startTime = e.target.value;\n                    if (startTime == \"19:00\" && clickedGenerateQueue) {\n                        const getMostRecentTransactionx = async (startTime) => {\n                            const res = await getMostRecentTransaction(startTime);\n\n                            if (!res.success) {\n                                const newObj = {};\n                                newObj[\"startTime\"] = \"19:00\";\n                                newObj[\"shifts\"] = SHIFT_TYPES;\n                                setDropdown(\"19:00\");\n                                sortMain(newObj, \"19:00\")\n                            } else if (res && res.transaction) {\n                                let getN5 = {};\n\n                                res.transaction.admissionsObj.allAdmissionsDataShifts.shifts.forEach((each, eachIndex) => {\n                                    if (each.name == \"N5\") {\n                                        getN5 = each;\n                                        return;\n                                    }\n                                })\n\n                                const newObj = {};\n\n                                const shifts = [];\n\n                                allAdmissionsDataShifts.shifts.forEach((each, eachIndex) => {\n                                    if (each.name == \"N5\") {\n                                        each = getN5;\n                                    }\n                                    shifts.push(each);\n                                })\n                                newObj[\"startTime\"] = \"19:00\";\n                                newObj[\"shifts\"] = shifts;\n                                setDropdown(\"19:00\");\n                                // setAllAdmissionsDataShifts(newObj);\n                                sortMain(newObj, \"19:00\")\n                                // setLastSaved(\"\")\n\n                            }\n                        }\n                        getMostRecentTransactionx(\"19:00\");\n\n                    } else {\n                        setClickedGenerateQueue(false);\n                        setDropdown(startTime);\n                        setLastSaved(\"\")\n                        setAllAdmissionsDataShifts({ shifts: SHIFT_TYPES, dropdown: startTime });\n                        const getMostRecentTransactionx = async (startTime) => {\n                            const res = await getMostRecentTransaction(startTime);\n\n                            if (res && res.transaction) {\n                                const order = res.transaction.order;\n                                const allAdmissionsDataShiftsx = res.transaction.admissionsObj.allAdmissionsDataShifts;\n                                const lastSavedTime = res.transaction.localDateTime;\n                                // if (allAdmissionsDataShiftsx) {\n                                //     setAllAdmissionsDataShifts(allAdmissionsDataShiftsx);\n                                // }\n\n                                if (order.split(\">\").length > 10) {\n                                    const splitArr = order.split(\">\");\n                                    function splitArrayAtSecondOccurrence(arr, value) {\n                                        let count = 0;\n                                        let splitIndex = -1;\n\n                                        for (let i = 0; i < arr.length; i++) {\n                                            if (arr[i] === value) {\n                                                count++;\n                                                if (count === 2) {\n                                                    splitIndex = i;\n                                                    break;\n                                                }\n                                            }\n                                        }\n\n                                        if (splitIndex !== -1) {\n                                            setArray1(arr.slice(0, splitIndex));\n                                            setArray2(arr.slice(splitIndex));\n                                            return [arr.slice(0, splitIndex), arr.slice(splitIndex)];\n                                        } else {\n                                            return [arr];\n                                        }\n                                    }\n                                    setOrderOfAdmissions(order);\n                                    splitArrayAtSecondOccurrence(splitArr, \"N1\");\n\n                                } else if (order) {\n                                    setOrderOfAdmissions(order);\n                                }\n\n                                if (lastSavedTime) {\n                                    setLastSaved(lastSavedTime);\n                                }\n                                // setSortRoles(allAdmissionsDataShiftsx, startTime, lastSavedTime);\n                                sortMain(allAdmissionsDataShiftsx, startTime)\n                            }\n                        }\n                        getMostRecentTransactionx(startTime);\n\n                    }\n                }\n                }>\n                {START_TIMES.map((startTime, startTimeIndex) => {\n                    return (<option\n                        value={`${startTime.value}`}>\n                        {`${startTime.label}`}\n                    </option>);\n                })}\n            </select>\n        );\n    }\n\n    const sortByAscendingName = (admissionsDatax) => {\n        const returnObjShifts = admissionsDatax.shifts.sort((a, b) => {\n            return ROLE_ORDER.indexOf(a.name) - ROLE_ORDER.indexOf(b.name);\n        });\n\n        let returnObj = {};\n        returnObj.startTime = admissionsDatax.startTime;\n        returnObj.shifts = returnObjShifts;\n\n        setAllAdmissionsDataShifts(returnObj);\n    }\n\n    const isMobileDevice = () => {\n        if (/Mobi|Android|iPhone|iPad|iPod|BlackBerry|Windows Phone/i.test(navigator.userAgent)) {\n            // console.log(\"User is on a phone or tablet.\");\n            return true;\n        } else {\n            // console.log(\"User is on a desktop.\");\n            return false;\n        }\n    }\n\n    const takeScreenshot = async () => {\n\n        const element = document.getElementById(\"screenshotimg\");\n\n        // Capture the div as a canvas\n        const canvas = await html2canvas(element);\n\n        // Convert the canvas to a Blob\n        canvas.toBlob(async (blob) => {\n            if (!blob) {\n                alert('Failed to capture the screenshot.');\n                return;\n            }\n\n            // Copy the Blob to the clipboard\n            try {\n                const clipboardItem = new ClipboardItem({ 'image/png': blob });\n                await navigator.clipboard.write([clipboardItem]);\n                alert('✅ Screenshot copied to clipboard!');\n            } catch (err) {\n                console.error('Failed to copy the screenshot to the clipboard:', err);\n                alert('Failed to copy the screenshot. Check your browser permissions.');\n            }\n        });\n\n    }\n\n    const setSortRoles = (admissionsDatax, dropdownSelected, lastSavedTime = \"\") => {\n        const sortRoles = [];\n        let sortRolesNameOnly = [];\n\n        let timeObjShifts = admissionsDatax.shifts;\n\n        //sort by name\n        const customOrder = [\"DA\", \"S1\", \"S2\", \"S3\", \"S4\", \"N5\", \"N1\", \"N2\", \"N3\", \"N4\"];\n\n        // Sort the data based on the custom order\n        timeObjShifts && Array.isArray(timeObjShifts) && timeObjShifts.sort((a, b) => {\n            const indexA = customOrder.indexOf(a.name);\n            const indexB = customOrder.indexOf(b.name);\n\n            // If the names are not in the custom order, move them to the end\n            return (indexA !== -1 ? indexA : Infinity) - (indexB !== -1 ? indexB : Infinity);\n        });\n\n\n        // let sevenPmS4greaterThanCap = false;\n        timeObjShifts && Array.isArray(timeObjShifts) && timeObjShifts.forEach((each, eachIndex) => {\n            if (SHOW_ROWS_COPY[dropdownSelected].includes(each.name)) {\n\n                if (dropdown == \"17:00\") {\n                    if (each.numberOfHoursWorked + \"\" !== \"0\") {\n                        sortRoles.push(getFormattedOutput(each));\n                    }\n                    if (Number(each.numberOfAdmissions) <= NUMBER_OF_ADMISSIONS_CAP) {\n                        sortRolesNameOnly.push(`${each.name}(${each.chronicLoadRatio})`);\n                    }\n                } else if (dropdown == \"19:00\") {\n                    if (each.numberOfHoursWorked + \"\" !== \"0\") {\n                        if (Number(each.numberOfAdmissions) > NUMBER_OF_ADMISSIONS_CAP) {\n                            sortRoles.push(getFormattedOutput(each) + \" (DONE)\");\n                        } else {\n                            sortRoles.push(getFormattedOutput(each));\n                        }\n                    }\n                    if (Number(each.numberOfAdmissions) <= NUMBER_OF_ADMISSIONS_CAP) {\n                        if (window.location.hostname === 'localhost' && SHOW_ADMISSIONS_WITH_DETAILS) {\n                            sortRolesNameOnly.push(`${each.name}(${each.chronicLoadRatio})`);\n                        } else {\n                            sortRolesNameOnly.push(each.name);\n                        }\n                    }\n                }\n\n            }\n        });\n\n        sortRoles.push(`${sortRolesNameOnly.join(\">\")}`);\n\n        return timeObjShifts;\n    }\n\n    const handleGenerateQueue = async (e) => {\n        setClickedGenerateQueue(true);\n        const orderOfAdmissions_ = sortMain(allAdmissionsDataShifts, dropdown);\n\n        if (!doNotStoreInDb) {\n            try {\n                // Wait for addTransaction to complete before fetching the recent transaction\n                await addTransaction(\n                    { allAdmissionsDataShifts, startTime: dropdown },\n                    orderOfAdmissions_\n                );\n\n                // Now fetch the most recent transaction\n                const result = await getMostRecentTransaction(dropdown);\n\n                // console.log(\"recent transaction\", result);\n                if (result.success) {\n                    setLastSaved(result.transaction.localDateTime);\n                    setAllAdmissionsDataShifts(allAdmissionsDataShifts);\n                    setDropdown(dropdown);\n\n                    if (dropdown === \"17:00\") {\n                        setLastSaved5Pm(result.transaction.admissionsObj.allAdmissionsDataShifts);\n                    }\n                }\n            } catch (error) {\n                console.error(\"Error generating queue:\", error);\n            }\n        }\n    };\n\n    const handleKeyDown = (e, rowIndex) => {\n        const data = allAdmissionsDataShifts.shifts;\n        if (e.key === 'ArrowDown') {\n            e.preventDefault();\n            if (rowIndex < data.length - 1) {\n                const getInputById = document.getElementById(`${e.target.name}_${rowIndex + 1}`);\n\n                if (getInputById) {\n                    getInputById.focus();\n                }\n            }\n        } else if (e.key === 'ArrowUp') {\n            e.preventDefault(); // Prevent the default action (scrolling)\n            // Move to the previous row\n            if (rowIndex > 0) {\n                const getInputById = document.getElementById(`${e.target.name}_${rowIndex - 1}`);\n\n                if (getInputById) {\n                    getInputById.focus();\n                }\n            }\n        } else if (e.target.name == \"numberOfAdmissions\" && e.key === \"ArrowLeft\") {\n\n            const getElementById = document.getElementById(`timestamp_${rowIndex}`);\n            if (getElementById) {\n                getElementById.focus();\n            }\n        } else if (e.target.name == \"timestamp\" && e.key === \"ArrowRight\") {\n\n            const getElementById = document.getElementById(`numberOfAdmissions_${rowIndex}`);\n            if (getElementById) {\n                getElementById.focus();\n            }\n        }\n    };\n\n    function hasTwoOccurrences(str, target) {\n        // Split the string by the target substring and check if there are more than 2 parts\n        const parts = str.split(target);\n        return parts.length > 2;\n    }\n\n    return (\n        <div>\n            <div className=\"header\">\n\n            <div className=\"bg-blue-900 text-white py-6 px-4 relative\">\n        <Logout /> {/* 👈 Mounted inside the blue header */}\n        <h1 className=\"text-5xl font-bold text-center tracking-widest leading-tight\">\n          S.A.D.Q\n        </h1>\n        <p className=\"text-center text-lg mt-2\">\n          Standardized Admissions Distribution Queue\n        </p>\n      </div>\n\n            \n        </div>\n\n            {\n        loading ? <div className=\"loading\">\n            <div className=\"spinner\">\n                {/* Loading... */}\n                <div className=\"rect1\"></div>\n                <div className=\"rect2\"></div>\n                <div className=\"rect3\"></div>\n                <div className=\"rect4\"></div>\n                <div className=\"rect5\"></div>\n            </div>\n        </div> :\n            <div className=\"container\">\n                <div className=\"flex-container-just1item\">\n                    {timesDropdown()}\n                </div>\n                {!isMobileDevice() && <img\n                    alt=\"copy button\"\n                    className=\"copybutton\"\n                    id=\"snapshot-button\"\n                    src={snapshotImg}\n                    onClick={(ev) => {\n                        takeScreenshot();\n\n                    }} />}\n                <button\n                    onClick={() => setOpenTable(!openTable)}\n                    className=\"expand\"\n                >\n                    {openTable ? \"Minimize Table ⬆️\" : \"Expand Table ⬇️\"}\n                </button>\n                <table id=\"screenshotimg\">\n\n                    <table id=\"reacttable\">\n                        <thead>\n                            {openTable ? (\n                                <tr>\n                                    {MINIMIZE_TABLE_STATIC_COMPOSITE_WEB.map((each, eachIndex) => {\n                                        if (each[0] == \"name\") {\n                                            return (\n                                                <th className={\"th_10percent\"} key={eachIndex}>{each[1]}</th>\n                                            );\n                                        } else if (each[0] == \"timestamp\" || each[0] == \"numberOfAdmissions\" || each[0] == \"chronicLoadRatio\") {\n                                            return (\n                                                <th className=\"th_25percent\" key={eachIndex}>{each[1]}</th>\n                                            );\n                                        }\n                                        return (<th key={eachIndex}>{each[1]}</th>);\n                                    })}\n                                </tr>\n                            ) : isMobileDevice() ? (\n                                <tr>\n                                    {MINIMIZE_TABLE_STATIC_COMPOSITE_MOBILE.map((each, eachIndex) => {\n                                        if (each[0] == \"name\") {\n                                            return (\n                                                <th className=\"th_10percent\" key={eachIndex}>{each[1]}</th>\n                                            );\n                                        } else if (each[0] == \"timestamp\" || each[0] == \"numberOfAdmissions\" || each[0] == \"chronicLoadRatio\") {\n                                            return (\n                                                <th className=\"th_25percent\" key={eachIndex}>{each[1]}</th>\n                                            );\n                                        }\n                                        return (<th key={eachIndex}>{each[1]}</th>);\n                                    })}\n                                </tr>\n                            ) : (\n                                <tr>\n                                    {MINIMIZE_TABLE_STATIC_COMPOSITE_MOBILE.map((each, eachIndex) => {\n                                        if (each[0] == \"name\") {\n                                            return (\n                                                <th className=\"th_10percent\" key={eachIndex}>{each[1]}</th>\n                                            );\n                                        } else if (each[0] == \"timestamp\" || each[0] == \"numberOfAdmissions\" || each[0] == \"chronicLoadRatio\") {\n                                            return (\n                                                <th className=\"th_25percent\" key={eachIndex}>{each[1]}</th>\n                                            );\n                                        }\n                                        return (<th key={eachIndex}>{each[1]}</th>);\n                                    })}\n                                </tr>\n                            )}\n                        </thead>\n                        <tbody>\n                            {allAdmissionsDataShifts.shifts &&\n                                allAdmissionsDataShifts.shifts.length > 0 &&\n                                allAdmissionsDataShifts.shifts.map((admission, indexx) => {\n                                    let index = 0;\n                                    if (SHOW_ROWS_TABLE[dropdown] && SHOW_ROWS_TABLE[dropdown].includes(admission.name)) {\n                                        index = SHOW_ROWS_TABLE[dropdown].findIndex((user) => user == admission.name);\n                                        return (\n                                            !admission.isStatic && (\n                                                <tr\n                                                    style={SHOW_ROWS_TABLE[dropdown] && SHOW_ROWS_TABLE[dropdown].includes(admission.name) ? {} : { display: \"none\" }}\n                                                    id={\"admissionsDataRow_\" + index}\n                                                    className={\"admissionsDataRow\"}\n                                                    key={admission.admissionsId}\n                                                >\n                                                    <td>\n                                                        <input name={`name_${index}`} className=\"bold-fields\" value={admission.name || \"\"} type=\"text\" disabled={true} />\n                                                    </td>\n                                                    {/* {openTable && (\n                                                            <td>\n                                                                <input name=\"shiftTimePeriod\" value={admission.shiftTimePeriod} type=\"text\" disabled={true} />\n                                                            </td>\n                                                        )} */}\n                                                    <td className=\"usercanedit\" tabIndex={-1} onKeyDown={(e) => handleKeyDown(e, index)}>\n                                                        <input\n                                                            id={`timestamp_${index}`}\n                                                            name=\"timestamp\"\n                                                            className=\"timestamp\"\n                                                            value={admission.timestamp || \"\"}\n                                                            type=\"time\"\n                                                            onChange={(e) => onChange(e, admission.admissionsId)}\n                                                            disabled={admission.isStatic}\n                                                        />\n                                                    </td>\n                                                    <td className=\"usercanedit cell-with-number\" tabIndex={-1} onKeyDown={(e) => handleKeyDown(e, index)}>\n                                                        <span className=\"small-number\">{getXIn2Hours(admission)}</span>\n                                                        <input\n                                                            id={`numberOfAdmissions_${index}`}\n                                                            name=\"numberOfAdmissions\"\n                                                            className=\"numberOfAdmissions\"\n                                                            value={admission.numberOfAdmissions || \"\"}\n                                                            step=\"1\"\n                                                            type=\"number\"\n                                                            placeholder=\"---\"\n                                                            onChange={(e) => onChange(e, admission.admissionsId)}\n                                                            disabled={admission.isStatic}\n                                                            inputMode=\"numeric\"\n                                                            pattern=\"[0-9]*\"\n                                                        />\n                                                    </td>\n                                                    {openTable &&\n                                                        <td className=\"backgroundlightgray\">\n                                                            <div className=\"progress-cell\">\n                                                                <div className=\"progress-container\">\n                                                                    <div\n                                                                        className=\"progress-bar\"\n                                                                        style={{\n                                                                            width: `${(admission.normalizedAlr || 0) * 100}%`,\n                                                                            background: (admission.normalizedAlr || 0) > 0.5\n                                                                                ? \"linear-gradient(to right, #800000, #800000)\" /* Red gradient */\n                                                                                : \"linear-gradient(to right, #800000, #800000)\" /* Green gradient */\n                                                                        }}\n                                                                    />\n                                                                </div>\n                                                                <span className=\"progress-text\">\n                                                                    {admission.normalizedAlr ? Number(admission.normalizedAlr).toFixed(2) : \"\"}\n                                                                </span>\n                                                            </div>\n                                                        </td>}\n\n                                                    {<td className=\"backgroundlightgray\">\n                                                        <div className=\"progress-cell\">\n                                                            <div className=\"progress-container\">\n                                                                <div\n                                                                    className=\"progress-bar\"\n                                                                    style={{\n                                                                        width: `${(admission.clr || 0) * 100}%`,\n                                                                        background: (admission.clr || 0) > 0.5\n                                                                            ? \"linear-gradient(to right, #1a0dab, #1a0dab)\" /* Red gradient */\n                                                                            : \"linear-gradient(to right,  #1a0dab, #1a0dab)\" /* Green gradient */\n                                                                    }}\n                                                                />\n                                                            </div>\n                                                            <span className=\"progress-text\">\n                                                                {openTable ? Number(admission.clr).toFixed(2) : `${Math.round((admission.clr || 0) * 100)}%`}\n                                                            </span>\n                                                        </div>\n                                                    </td>}\n                                                    {false && openTable && (\n                                                        <td>\n                                                            <input\n                                                                name=\"numberHoursWorked\"\n                                                                value={admission.numberOfHoursWorked || \"\"}\n                                                                type=\"number\"\n                                                                placeholder=\"Enter number\"\n                                                                disabled={true}\n                                                            />\n                                                        </td>\n                                                    )}\n                                                    {openTable &&\n                                                        <td className=\"backgroundlightgray\">\n                                                            <div className=\"progress-cell\">\n                                                                <div className=\"progress-container\">\n                                                                    <div\n                                                                        className=\"progress-bar\"\n                                                                        style={{\n                                                                            width: `${(admission.composite || 0) * 100}%`,\n                                                                            background: (admission.composite || 0) > 0.5\n                                                                                ? \"linear-gradient(to right, #1a0dab, #1a0dab)\" /* Red gradient */\n                                                                                : \"linear-gradient(to right,  #1a0dab, #1a0dab)\" /* Green gradient */\n                                                                        }}\n                                                                    />\n                                                                </div>\n                                                                <span className=\"progress-text\">\n                                                                    {admission.composite ? Number(admission.composite).toFixed(2) : \"\"}\n                                                                </span>\n                                                            </div>\n                                                        </td>}\n                                                </tr>\n                                            )\n                                        );\n                                    }\n                                })}\n                        </tbody>\n                    </table>\n                    <p className=\"endoutputcenter\" id=\"orderofadmissions_title\">{`Order of Admits ${lastSaved}`}</p>\n                    {window.location.hostname === 'localhost' && SHOW_ADMISSIONS_WITH_DETAILS && (originalAlgorithm) ?\n                        <p className=\"endoutputcenter\" id=\"orderofadmissions_output\">\n                            {orderOfAdmissions && orderOfAdmissions}\n                        </p>\n                        : hasTwoOccurrences(orderOfAdmissions, \"N1\") ?\n                            <div>\n                                <p className=\"endoutputcenter\" id=\"orderofadmissions_output\">{array1 ? `(${array1.join(\">\")})¹` : \"\"}<br></br>{array2 && `(${array2.join(\">\")})ⁿ`}</p>\n                            </div>\n                            : <p className=\"endoutputcenter\" id=\"orderofadmissions_output\">{orderOfAdmissions}</p>\n                    }\n                    <div className=\"lastsaved-yellowmessage\">\n                        {/* {\"Generated \" + lastSaved } */}\n                        {/* {\"This tool is for workflow support only. Providers remain responsible for admissions and patient care decisions.\"} */}\n\n                    </div>\n                </table>\n\n                <section>\n                    <button id=\"generateQueue\" onClick={(e) => {\n                        handleGenerateQueue(e);\n\n                        if (\"vibrate\" in navigator) {\n                            navigator.vibrate(200);\n                        }\n                    }}>\n                        Generate Queue\n                    </button>\n                </section>\n\n                {/* <button className=\"seedetails\" id=\"seedetails\" onClick={() => {\n                        setSeeDetails(!seeDetails);\n                        // setShow1( false);\n                        setShow2(false);\n                        setShow3(false);\n                        setShow4(false);\n                    }\n                    }>{seeDetails ? \"Hide Explanation\" : \"Show Explanation\"}</button> */}\n\n                {seeDetails && <fieldset className=\"notes\">\n                    <p className=\"bold\">Explanation</p>\n\n                    {/* Part 2: Explanation */}\n                    <button className=\"explanation\" onClick={() => {\n                        setShow2(!show2);\n                    }\n                    }>{!show2 ? \"> Step by Step\" : \"< Step by Step\"}</button><br></br>\n\n                    {show2 && <div id=\"stepbystepdetails\">\n                        {explanation && explanation.map((line, lineIndex) => {\n                            if (line == \"\\n\") {\n                                return <br></br>\n                            } else {\n                                return <p>{line}</p>\n                            }\n                        })}<br></br>\n                    </div>}\n\n                    <input\n                        id=\"doNotStoreInDb\"\n                        placeholder=\"Generate Queue without Storing in Database\"\n                        className=\"input-left\"\n                        label=\"\"\n                        type=\"checkbox\"\n                        onChange={(e) => {\n                            setDoNotStoreInDb(e.target.checked);\n                        }}\n                    />\n                    <label for=\"originalAlgorithm\">Generate Queue without Storing in Database</label>\n\n                    {/* Part 3: Copy Message */}\n\n                    {/* <button className=\"explanation\"\n                            onClick={() => {\n                                setShow3(!show3);\n                            }}>{!show3 ? \"> Copy Messages\" : \"< Copy Messages\"}</button><br></br> */}\n\n                    {/* {show3 && <CopyMessages />} */}\n\n\n                    {/* Part 4: Set Composite Score */}\n                    {/* <button className=\"explanation\" onClick={() => {\n                            setShow4(!show4);\n                        }\n                        }>{!show4 ? \"> Set Algorithm\" : \"< Set Algorithm\"}</button><br></br> */}\n\n                    {show4 &&\n                        <div>\n\n                            <div>\n                                <input\n                                    id=\"originalAlgorithmCheckbox\"\n                                    placeholder=\"Original Algorithm\"\n                                    className=\"input-left\"\n                                    label=\"\"\n                                    type=\"checkbox\"\n                                    onChange={(e) => {\n                                        setOriginalAlgorithm(e.target.checked);\n                                    }}\n                                />\n                                <label for=\"originalAlgorithm\">Original Algorithm v1.0</label>\n                            </div>\n\n                        </div>\n                    }\n\n\n\n                </fieldset>}<br></br>\n                <div className=\"footer\">\n                    {/* <img\n                            alt=\"copy button\"\n                            className=\"githubbutton\"\n                            src={githublogo}\n                            onClick={(ev) => {\n                                window.open(\"https://github.com/sadqueue/sad/tree/main\", '_blank');\n                            }} /> */}\n                    <p className=\"footer-text\">&copy; {new Date().getFullYear()} Genki MD LLC</p>\n                    <p className=\"footer-text\">All rights reserved. Licensed use only.</p>\n                    <p className=\"footer-text\">This tool is for workflow support only. Providers are responsible for final admission and care decisions.</p>\n                </div>\n            </div>\n    }\n        </div >\n    )\n\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}